!function(n){function e(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return n[r].call(i.exports,i,i.exports,e),i.l=!0,i.exports}var t={};e.m=n,e.c=t,e.i=function(n){return n},e.d=function(n,t,r){e.o(n,t)||Object.defineProperty(n,t,{configurable:!1,enumerable:!0,get:r})},e.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return e.d(t,"a",t),t},e.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},e.p="",e(e.s=10)}([function(n,e,t){"use strict";var r=e;r.utils=t(7),r.common=t(3),r.sha=t(6),r.ripemd=t(5),r.hmac=t(4),r.sha1=r.sha.sha1,r.sha256=r.sha.sha256,r.sha224=r.sha.sha224,r.sha384=r.sha.sha384,r.sha512=r.sha.sha512,r.ripemd160=r.ripemd.ripemd160},function(n,e,t){"use strict";!function(n){function e(n){if("string"!=typeof n&&(n=String(n)),/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(n))throw new TypeError("Invalid character in header field name");return n.toLowerCase()}function t(n){return"string"!=typeof n&&(n=String(n)),n}function r(n){var e={next:function(){var e=n.shift();return{done:void 0===e,value:e}}};return m.iterable&&(e[Symbol.iterator]=function(){return e}),e}function i(n){this.map={},n instanceof i?n.forEach(function(n,e){this.append(e,n)},this):Array.isArray(n)?n.forEach(function(n){this.append(n[0],n[1])},this):n&&Object.getOwnPropertyNames(n).forEach(function(e){this.append(e,n[e])},this)}function o(n){if(n.bodyUsed)return Promise.reject(new TypeError("Already read"));n.bodyUsed=!0}function s(n){return new Promise(function(e,t){n.onload=function(){e(n.result)},n.onerror=function(){t(n.error)}})}function a(n){var e=new FileReader,t=s(e);return e.readAsArrayBuffer(n),t}function f(n){var e=new FileReader,t=s(e);return e.readAsText(n),t}function u(n){for(var e=new Uint8Array(n),t=new Array(e.length),r=0;r<e.length;r++)t[r]=String.fromCharCode(e[r]);return t.join("")}function l(n){if(n.slice)return n.slice(0);var e=new Uint8Array(n.byteLength);return e.set(new Uint8Array(n)),e.buffer}function h(){return this.bodyUsed=!1,this._initBody=function(n){if(this._bodyInit=n,n)if("string"==typeof n)this._bodyText=n;else if(m.blob&&Blob.prototype.isPrototypeOf(n))this._bodyBlob=n;else if(m.formData&&FormData.prototype.isPrototypeOf(n))this._bodyFormData=n;else if(m.searchParams&&URLSearchParams.prototype.isPrototypeOf(n))this._bodyText=n.toString();else if(m.arrayBuffer&&m.blob&&x(n))this._bodyArrayBuffer=l(n.buffer),this._bodyInit=new Blob([this._bodyArrayBuffer]);else{if(!m.arrayBuffer||!ArrayBuffer.prototype.isPrototypeOf(n)&&!v(n))throw new Error("unsupported BodyInit type");this._bodyArrayBuffer=l(n)}else this._bodyText="";this.headers.get("content-type")||("string"==typeof n?this.headers.set("content-type","text/plain;charset=UTF-8"):this._bodyBlob&&this._bodyBlob.type?this.headers.set("content-type",this._bodyBlob.type):m.searchParams&&URLSearchParams.prototype.isPrototypeOf(n)&&this.headers.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"))},m.blob&&(this.blob=function(){var n=o(this);if(n)return n;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(new Blob([this._bodyArrayBuffer]));if(this._bodyFormData)throw new Error("could not read FormData body as blob");return Promise.resolve(new Blob([this._bodyText]))},this.arrayBuffer=function(){return this._bodyArrayBuffer?o(this)||Promise.resolve(this._bodyArrayBuffer):this.blob().then(a)}),this.text=function(){var n=o(this);if(n)return n;if(this._bodyBlob)return f(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(u(this._bodyArrayBuffer));if(this._bodyFormData)throw new Error("could not read FormData body as text");return Promise.resolve(this._bodyText)},m.formData&&(this.formData=function(){return this.text().then(p)}),this.json=function(){return this.text().then(JSON.parse)},this}function c(n){var e=n.toUpperCase();return _.indexOf(e)>-1?e:n}function d(n,e){e=e||{};var t=e.body;if(n instanceof d){if(n.bodyUsed)throw new TypeError("Already read");this.url=n.url,this.credentials=n.credentials,e.headers||(this.headers=new i(n.headers)),this.method=n.method,this.mode=n.mode,t||null==n._bodyInit||(t=n._bodyInit,n.bodyUsed=!0)}else this.url=String(n);if(this.credentials=e.credentials||this.credentials||"omit",!e.headers&&this.headers||(this.headers=new i(e.headers)),this.method=c(e.method||this.method||"GET"),this.mode=e.mode||this.mode||null,this.referrer=null,("GET"===this.method||"HEAD"===this.method)&&t)throw new TypeError("Body not allowed for GET or HEAD requests");this._initBody(t)}function p(n){var e=new FormData;return n.trim().split("&").forEach(function(n){if(n){var t=n.split("="),r=t.shift().replace(/\+/g," "),i=t.join("=").replace(/\+/g," ");e.append(decodeURIComponent(r),decodeURIComponent(i))}}),e}function b(n){var e=new i;return n.split(/\r?\n/).forEach(function(n){var t=n.split(":"),r=t.shift().trim();if(r){var i=t.join(":").trim();e.append(r,i)}}),e}function g(n,e){e||(e={}),this.type="default",this.status="status"in e?e.status:200,this.ok=this.status>=200&&this.status<300,this.statusText="statusText"in e?e.statusText:"OK",this.headers=new i(e.headers),this.url=e.url||"",this._initBody(n)}if(!n.fetch){var m={searchParams:"URLSearchParams"in n,iterable:"Symbol"in n&&"iterator"in Symbol,blob:"FileReader"in n&&"Blob"in n&&function(){try{return new Blob,!0}catch(n){return!1}}(),formData:"FormData"in n,arrayBuffer:"ArrayBuffer"in n};if(m.arrayBuffer)var y=["[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]"],x=function(n){return n&&DataView.prototype.isPrototypeOf(n)},v=ArrayBuffer.isView||function(n){return n&&y.indexOf(Object.prototype.toString.call(n))>-1};i.prototype.append=function(n,r){n=e(n),r=t(r);var i=this.map[n];this.map[n]=i?i+","+r:r},i.prototype.delete=function(n){delete this.map[e(n)]},i.prototype.get=function(n){return n=e(n),this.has(n)?this.map[n]:null},i.prototype.has=function(n){return this.map.hasOwnProperty(e(n))},i.prototype.set=function(n,r){this.map[e(n)]=t(r)},i.prototype.forEach=function(n,e){for(var t in this.map)this.map.hasOwnProperty(t)&&n.call(e,this.map[t],t,this)},i.prototype.keys=function(){var n=[];return this.forEach(function(e,t){n.push(t)}),r(n)},i.prototype.values=function(){var n=[];return this.forEach(function(e){n.push(e)}),r(n)},i.prototype.entries=function(){var n=[];return this.forEach(function(e,t){n.push([t,e])}),r(n)},m.iterable&&(i.prototype[Symbol.iterator]=i.prototype.entries);var _=["DELETE","GET","HEAD","OPTIONS","POST","PUT"];d.prototype.clone=function(){return new d(this,{body:this._bodyInit})},h.call(d.prototype),h.call(g.prototype),g.prototype.clone=function(){return new g(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new i(this.headers),url:this.url})},g.error=function(){var n=new g(null,{status:0,statusText:""});return n.type="error",n};var w=[301,302,303,307,308];g.redirect=function(n,e){if(-1===w.indexOf(e))throw new RangeError("Invalid status code");return new g(null,{status:e,headers:{location:n}})},n.Headers=i,n.Request=d,n.Response=g,n.fetch=function(n,e){return new Promise(function(t,r){var i=new d(n,e),o=new XMLHttpRequest;o.onload=function(){var n={status:o.status,statusText:o.statusText,headers:b(o.getAllResponseHeaders()||"")};n.url="responseURL"in o?o.responseURL:n.headers.get("X-Request-URL");var e="response"in o?o.response:o.responseText;t(new g(e,n))},o.onerror=function(){r(new TypeError("Network request failed"))},o.ontimeout=function(){r(new TypeError("Network request failed"))},o.open(i.method,i.url,!0),"include"===i.credentials&&(o.withCredentials=!0),"responseType"in o&&m.blob&&(o.responseType="blob"),i.headers.forEach(function(n,e){o.setRequestHeader(e,n)}),o.send(void 0===i._bodyInit?null:i._bodyInit)})},n.fetch.polyfill=!0}}("undefined"!=typeof self?self:void 0)},function(n,e,t){"use strict";function r(n){var e=this;if(!(this instanceof r))return new r(n);this._elem="string"==typeof n?document.getElementById(n):n,this._id=this._elem.dataset.voteId||i.sha256().update(document.location.href.replace(/#.*$/,"")).digest("hex");var t=new Blob([o],{type:"text/javascript"});"undefined"!=typeof Worker&&(this._worker=new Worker(window.URL.createObjectURL(t)),this._worker.onmessage=function(n){return e._onNonce(n.data)}),this._voted=!1,this._ready=!1,this._params=null,this._init(),this._elem.onclick=function(n){n.preventDefault(),e._vote()}}var i=t(0),o=t(9),s="https://vote.now.sh/api/v1";n.exports=r,r.prototype._init=function(){var n=this;this._elem.classList.add("votenow"),this._elem.classList.add("votenow-loading");var e=2,t=function(){0==--e&&(n._elem.classList.remove("votenow-loading"),n._elem.classList.add("votenow-ready"),n._ready=!0)};fetch(s+"/").then(function(n){return n.json()}).then(function(e){n._params={complexity:e.complexity,prefix:e.prefix},t()}),fetch(s+"/vote/"+encodeURIComponent(this._id)).then(function(n){return n.json()}).then(function(e){n._elem.textContent=e.votes,t()}),"undefined"!=typeof localStorage&&localStorage.getItem("votenow/v1/"+this._id)&&(this._voted=!0,this._elem.disabled=!0,this._elem.classList.add("votenow-voted"))},r.prototype._vote=function(){!this._voted&&this._ready&&(this._voted=!0,this._elem.disabled=!0,this._elem.classList.add("votenow-computing"),this._elem.textContent=1+(this._elem.textContent>>>0),this._worker.postMessage(this._params))},r.prototype._onNonce=function(n){var e=this;this._elem.classList.remove("votenow-computing"),this._elem.classList.add("votenow-voting");var t=s+"/vote/"+encodeURIComponent(this._id);fetch(t,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify({nonce:n})}).then(function(n){return n.json()}).then(function(n){e._elem.classList.remove("votenow-voting"),e._elem.classList.add("votenow-voted"),"undefined"!=typeof localStorage&&localStorage.setItem("votenow/v1/"+e._id,!0),n.error?e._elem.classList.add("votenow-error"):e._elem.textContent=n.votes})},"undefined"!=typeof window&&(window.VoteNow=r),"undefined"!=typeof document&&document.querySelectorAll(".votenow").forEach(function(n){return new r(n)})},function(n,e,t){"use strict";function r(){this.pending=null,this.pendingTotal=0,this.blockSize=this.constructor.blockSize,this.outSize=this.constructor.outSize,this.hmacStrength=this.constructor.hmacStrength,this.padLength=this.constructor.padLength/8,this.endian="big",this._delta8=this.blockSize/8,this._delta32=this.blockSize/32}var i=t(0),o=i.utils,s=o.assert;e.BlockHash=r,r.prototype.update=function(n,e){if(n=o.toArray(n,e),this.pending?this.pending=this.pending.concat(n):this.pending=n,this.pendingTotal+=n.length,this.pending.length>=this._delta8){n=this.pending;var t=n.length%this._delta8;this.pending=n.slice(n.length-t,n.length),0===this.pending.length&&(this.pending=null),n=o.join32(n,0,n.length-t,this.endian);for(var r=0;r<n.length;r+=this._delta32)this._update(n,r,r+this._delta32)}return this},r.prototype.digest=function(n){return this.update(this._pad()),s(null===this.pending),this._digest(n)},r.prototype._pad=function(){var n=this.pendingTotal,e=this._delta8,t=e-(n+this.padLength)%e,r=new Array(t+this.padLength);r[0]=128;for(var i=1;i<t;i++)r[i]=0;if(n<<=3,"big"===this.endian){for(var o=8;o<this.padLength;o++)r[i++]=0;r[i++]=0,r[i++]=0,r[i++]=0,r[i++]=0,r[i++]=n>>>24&255,r[i++]=n>>>16&255,r[i++]=n>>>8&255,r[i++]=255&n}else{r[i++]=255&n,r[i++]=n>>>8&255,r[i++]=n>>>16&255,r[i++]=n>>>24&255,r[i++]=0,r[i++]=0,r[i++]=0,r[i++]=0;for(var o=8;o<this.padLength;o++)r[i++]=0}return r}},function(n,e,t){"use strict";function r(n,e,t){if(!(this instanceof r))return new r(n,e,t);this.Hash=n,this.blockSize=n.blockSize/8,this.outSize=n.outSize/8,this.inner=null,this.outer=null,this._init(o.toArray(e,t))}var i=t(0),o=i.utils,s=o.assert;n.exports=r,r.prototype._init=function(n){n.length>this.blockSize&&(n=(new this.Hash).update(n).digest()),s(n.length<=this.blockSize);for(var e=n.length;e<this.blockSize;e++)n.push(0);for(var e=0;e<n.length;e++)n[e]^=54;this.inner=(new this.Hash).update(n);for(var e=0;e<n.length;e++)n[e]^=106;this.outer=(new this.Hash).update(n)},r.prototype.update=function(n,e){return this.inner.update(n,e),this},r.prototype.digest=function(n){return this.outer.update(this.inner.digest()),this.outer.digest(n)}},function(n,e,t){"use strict";function r(){if(!(this instanceof r))return new r;d.call(this),this.h=[1732584193,4023233417,2562383102,271733878,3285377520],this.endian="little"}function i(n,e,t,r){return n<=15?e^t^r:n<=31?e&t|~e&r:n<=47?(e|~t)^r:n<=63?e&r|t&~r:e^(t|~r)}function o(n){return n<=15?0:n<=31?1518500249:n<=47?1859775393:n<=63?2400959708:2840853838}function s(n){return n<=15?1352829926:n<=31?1548603684:n<=47?1836072691:n<=63?2053994217:0}var a=t(0),f=a.utils,u=f.rotl32,l=f.sum32,h=f.sum32_3,c=f.sum32_4,d=a.common.BlockHash;f.inherits(r,d),e.ripemd160=r,r.blockSize=512,r.outSize=160,r.hmacStrength=192,r.padLength=64,r.prototype._update=function(n,e){for(var t=this.h[0],r=this.h[1],a=this.h[2],f=this.h[3],d=this.h[4],y=t,x=r,v=a,_=f,w=d,A=0;A<80;A++){var E=l(u(c(t,i(A,r,a,f),n[p[A]+e],o(A)),g[A]),d);t=d,d=f,f=u(a,10),a=r,r=E,E=l(u(c(y,i(79-A,x,v,_),n[b[A]+e],s(A)),m[A]),w),y=w,w=_,_=u(v,10),v=x,x=E}E=h(this.h[1],a,_),this.h[1]=h(this.h[2],f,w),this.h[2]=h(this.h[3],d,y),this.h[3]=h(this.h[4],t,x),this.h[4]=h(this.h[0],r,v),this.h[0]=E},r.prototype._digest=function(n){return"hex"===n?f.toHex32(this.h,"little"):f.split32(this.h,"little")};var p=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13],b=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11],g=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6],m=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11]},function(n,e,t){"use strict";function r(){if(!(this instanceof r))return new r;K.call(this),this.h=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225],this.k=G,this.W=new Array(64)}function i(){if(!(this instanceof i))return new i;r.call(this),this.h=[3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428]}function o(){if(!(this instanceof o))return new o;K.call(this),this.h=[1779033703,4089235720,3144134277,2227873595,1013904242,4271175723,2773480762,1595750129,1359893119,2917565137,2600822924,725511199,528734635,4215389547,1541459225,327033209],this.k=J,this.W=new Array(160)}function s(){if(!(this instanceof s))return new s;o.call(this),this.h=[3418070365,3238371032,1654270250,914150663,2438529370,812702999,355462360,4144912697,1731405415,4290775857,2394180231,1750603025,3675008525,1694076839,1203062813,3204075428]}function a(){if(!(this instanceof a))return new a;K.call(this),this.h=[1732584193,4023233417,2562383102,271733878,3285377520],this.W=new Array(80)}function f(n,e,t){return n&e^~n&t}function u(n,e,t){return n&e^n&t^e&t}function l(n,e,t){return n^e^t}function h(n){return j(n,2)^j(n,13)^j(n,22)}function c(n){return j(n,6)^j(n,11)^j(n,25)}function d(n){return j(n,7)^j(n,18)^n>>>3}function p(n){return j(n,17)^j(n,19)^n>>>10}function b(n,e,t,r){return 0===n?f(e,t,r):1===n||3===n?l(e,t,r):2===n?u(e,t,r):void 0}function g(n,e,t,r,i,o){var s=n&t^~n&i;return s<0&&(s+=4294967296),s}function m(n,e,t,r,i,o){var s=e&r^~e&o;return s<0&&(s+=4294967296),s}function y(n,e,t,r,i,o){var s=n&t^n&i^t&i;return s<0&&(s+=4294967296),s}function x(n,e,t,r,i,o){var s=e&r^e&o^r&o;return s<0&&(s+=4294967296),s}function v(n,e){var t=F(n,e,28),r=F(e,n,2),i=F(e,n,7),o=t^r^i;return o<0&&(o+=4294967296),o}function _(n,e){var t=N(n,e,28),r=N(e,n,2),i=N(e,n,7),o=t^r^i;return o<0&&(o+=4294967296),o}function w(n,e){var t=F(n,e,14),r=F(n,e,18),i=F(e,n,9),o=t^r^i;return o<0&&(o+=4294967296),o}function A(n,e){var t=N(n,e,14),r=N(n,e,18),i=N(e,n,9),o=t^r^i;return o<0&&(o+=4294967296),o}function E(n,e){var t=F(n,e,1),r=F(n,e,8),i=H(n,e,7),o=t^r^i;return o<0&&(o+=4294967296),o}function B(n,e){var t=N(n,e,1),r=N(n,e,8),i=U(n,e,7),o=t^r^i;return o<0&&(o+=4294967296),o}function S(n,e){var t=F(n,e,19),r=F(e,n,29),i=H(n,e,6),o=t^r^i;return o<0&&(o+=4294967296),o}function k(n,e){var t=N(n,e,19),r=N(e,n,29),i=U(n,e,6),o=t^r^i;return o<0&&(o+=4294967296),o}var T=t(0),O=T.utils,I=O.assert,j=O.rotr32,L=O.rotl32,R=O.sum32,P=O.sum32_4,C=O.sum32_5,F=O.rotr64_hi,N=O.rotr64_lo,H=O.shr64_hi,U=O.shr64_lo,q=O.sum64,z=O.sum64_hi,D=O.sum64_lo,M=O.sum64_4_hi,W=O.sum64_4_lo,Y=O.sum64_5_hi,V=O.sum64_5_lo,K=T.common.BlockHash,G=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],J=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591],X=[1518500249,1859775393,2400959708,3395469782];O.inherits(r,K),e.sha256=r,r.blockSize=512,r.outSize=256,r.hmacStrength=192,r.padLength=64,r.prototype._update=function(n,e){for(var t=this.W,r=0;r<16;r++)t[r]=n[e+r];for(;r<t.length;r++)t[r]=P(p(t[r-2]),t[r-7],d(t[r-15]),t[r-16]);var i=this.h[0],o=this.h[1],s=this.h[2],a=this.h[3],l=this.h[4],b=this.h[5],g=this.h[6],m=this.h[7];I(this.k.length===t.length);for(var r=0;r<t.length;r++){var y=C(m,c(l),f(l,b,g),this.k[r],t[r]),x=R(h(i),u(i,o,s));m=g,g=b,b=l,l=R(a,y),a=s,s=o,o=i,i=R(y,x)}this.h[0]=R(this.h[0],i),this.h[1]=R(this.h[1],o),this.h[2]=R(this.h[2],s),this.h[3]=R(this.h[3],a),this.h[4]=R(this.h[4],l),this.h[5]=R(this.h[5],b),this.h[6]=R(this.h[6],g),this.h[7]=R(this.h[7],m)},r.prototype._digest=function(n){return"hex"===n?O.toHex32(this.h,"big"):O.split32(this.h,"big")},O.inherits(i,r),e.sha224=i,i.blockSize=512,i.outSize=224,i.hmacStrength=192,i.padLength=64,i.prototype._digest=function(n){return"hex"===n?O.toHex32(this.h.slice(0,7),"big"):O.split32(this.h.slice(0,7),"big")},O.inherits(o,K),e.sha512=o,o.blockSize=1024,o.outSize=512,o.hmacStrength=192,o.padLength=128,o.prototype._prepareBlock=function(n,e){for(var t=this.W,r=0;r<32;r++)t[r]=n[e+r];for(;r<t.length;r+=2){var i=S(t[r-4],t[r-3]),o=k(t[r-4],t[r-3]),s=t[r-14],a=t[r-13],f=E(t[r-30],t[r-29]),u=B(t[r-30],t[r-29]),l=t[r-32],h=t[r-31];t[r]=M(i,o,s,a,f,u,l,h),t[r+1]=W(i,o,s,a,f,u,l,h)}},o.prototype._update=function(n,e){this._prepareBlock(n,e);var t=this.W,r=this.h[0],i=this.h[1],o=this.h[2],s=this.h[3],a=this.h[4],f=this.h[5],u=this.h[6],l=this.h[7],h=this.h[8],c=this.h[9],d=this.h[10],p=this.h[11],b=this.h[12],E=this.h[13],B=this.h[14],S=this.h[15];I(this.k.length===t.length);for(var k=0;k<t.length;k+=2){var T=B,O=S,j=w(h,c),L=A(h,c),R=g(h,c,d,p,b,E),P=m(h,c,d,p,b,E),C=this.k[k],F=this.k[k+1],N=t[k],H=t[k+1],U=Y(T,O,j,L,R,P,C,F,N,H),M=V(T,O,j,L,R,P,C,F,N,H),T=v(r,i),O=_(r,i),j=y(r,i,o,s,a,f),L=x(r,i,o,s,a,f),W=z(T,O,j,L),K=D(T,O,j,L);B=b,S=E,b=d,E=p,d=h,p=c,h=z(u,l,U,M),c=D(l,l,U,M),u=a,l=f,a=o,f=s,o=r,s=i,r=z(U,M,W,K),i=D(U,M,W,K)}q(this.h,0,r,i),q(this.h,2,o,s),q(this.h,4,a,f),q(this.h,6,u,l),q(this.h,8,h,c),q(this.h,10,d,p),q(this.h,12,b,E),q(this.h,14,B,S)},o.prototype._digest=function(n){return"hex"===n?O.toHex32(this.h,"big"):O.split32(this.h,"big")},O.inherits(s,o),e.sha384=s,s.blockSize=1024,s.outSize=384,s.hmacStrength=192,s.padLength=128,s.prototype._digest=function(n){return"hex"===n?O.toHex32(this.h.slice(0,12),"big"):O.split32(this.h.slice(0,12),"big")},O.inherits(a,K),e.sha1=a,a.blockSize=512,a.outSize=160,a.hmacStrength=80,a.padLength=64,a.prototype._update=function(n,e){for(var t=this.W,r=0;r<16;r++)t[r]=n[e+r];for(;r<t.length;r++)t[r]=L(t[r-3]^t[r-8]^t[r-14]^t[r-16],1);for(var i=this.h[0],o=this.h[1],s=this.h[2],a=this.h[3],f=this.h[4],r=0;r<t.length;r++){var u=~~(r/20),l=C(L(i,5),b(u,o,s,a),f,t[r],X[u]);f=a,a=s,s=L(o,30),o=i,i=l}this.h[0]=R(this.h[0],i),this.h[1]=R(this.h[1],o),this.h[2]=R(this.h[2],s),this.h[3]=R(this.h[3],a),this.h[4]=R(this.h[4],f)},a.prototype._digest=function(n){return"hex"===n?O.toHex32(this.h,"big"):O.split32(this.h,"big")}},function(n,e,t){"use strict";function r(n,e){if(Array.isArray(n))return n.slice();if(!n)return[];var t=[];if("string"==typeof n)if(e){if("hex"===e){n=n.replace(/[^a-z0-9]+/gi,""),n.length%2!=0&&(n="0"+n);for(var r=0;r<n.length;r+=2)t.push(parseInt(n[r]+n[r+1],16))}}else for(var r=0;r<n.length;r++){var i=n.charCodeAt(r),o=i>>8,s=255&i;o?t.push(o,s):t.push(s)}else for(var r=0;r<n.length;r++)t[r]=0|n[r];return t}function i(n){for(var e="",t=0;t<n.length;t++)e+=a(n[t].toString(16));return e}function o(n){return(n>>>24|n>>>8&65280|n<<8&16711680|(255&n)<<24)>>>0}function s(n,e){for(var t="",r=0;r<n.length;r++){var i=n[r];"little"===e&&(i=o(i)),t+=f(i.toString(16))}return t}function a(n){return 1===n.length?"0"+n:n}function f(n){return 7===n.length?"0"+n:6===n.length?"00"+n:5===n.length?"000"+n:4===n.length?"0000"+n:3===n.length?"00000"+n:2===n.length?"000000"+n:1===n.length?"0000000"+n:n}function u(n,e,t,r){var i=t-e;m(i%4==0);for(var o=new Array(i/4),s=0,a=e;s<o.length;s++,a+=4){var f;f="big"===r?n[a]<<24|n[a+1]<<16|n[a+2]<<8|n[a+3]:n[a+3]<<24|n[a+2]<<16|n[a+1]<<8|n[a],o[s]=f>>>0}return o}function l(n,e){for(var t=new Array(4*n.length),r=0,i=0;r<n.length;r++,i+=4){var o=n[r];"big"===e?(t[i]=o>>>24,t[i+1]=o>>>16&255,t[i+2]=o>>>8&255,t[i+3]=255&o):(t[i+3]=o>>>24,t[i+2]=o>>>16&255,t[i+1]=o>>>8&255,t[i]=255&o)}return t}function h(n,e){return n>>>e|n<<32-e}function c(n,e){return n<<e|n>>>32-e}function d(n,e){return n+e>>>0}function p(n,e,t){return n+e+t>>>0}function b(n,e,t,r){return n+e+t+r>>>0}function g(n,e,t,r,i){return n+e+t+r+i>>>0}function m(n,e){if(!n)throw new Error(e||"Assertion failed")}function y(n,e,t,r){var i=n[e],o=n[e+1],s=r+o>>>0,a=(s<r?1:0)+t+i;n[e]=a>>>0,n[e+1]=s}function x(n,e,t,r){return(e+r>>>0<e?1:0)+n+t>>>0}function v(n,e,t,r){return e+r>>>0}function _(n,e,t,r,i,o,s,a){var f=0,u=e;return u=u+r>>>0,f+=u<e?1:0,u=u+o>>>0,f+=u<o?1:0,u=u+a>>>0,f+=u<a?1:0,n+t+i+s+f>>>0}function w(n,e,t,r,i,o,s,a){return e+r+o+a>>>0}function A(n,e,t,r,i,o,s,a,f,u){var l=0,h=e;return h=h+r>>>0,l+=h<e?1:0,h=h+o>>>0,l+=h<o?1:0,h=h+a>>>0,l+=h<a?1:0,h=h+u>>>0,l+=h<u?1:0,n+t+i+s+f+l>>>0}function E(n,e,t,r,i,o,s,a,f,u){return e+r+o+a+u>>>0}function B(n,e,t){return(e<<32-t|n>>>t)>>>0}function S(n,e,t){return(n<<32-t|e>>>t)>>>0}function k(n,e,t){return n>>>t}function T(n,e,t){return(n<<32-t|e>>>t)>>>0}var O=e,I=t(8);O.toArray=r,O.toHex=i,O.htonl=o,O.toHex32=s,O.zero2=a,O.zero8=f,O.join32=u,O.split32=l,O.rotr32=h,O.rotl32=c,O.sum32=d,O.sum32_3=p,O.sum32_4=b,O.sum32_5=g,O.assert=m,O.inherits=I,e.sum64=y,e.sum64_hi=x,e.sum64_lo=v,e.sum64_4_hi=_,e.sum64_4_lo=w,e.sum64_5_hi=A,e.sum64_5_lo=E,e.rotr64_hi=B,e.rotr64_lo=S,e.shr64_hi=k,e.shr64_lo=T},function(n,e,t){"use strict";"function"==typeof Object.create?n.exports=function(n,e){n.super_=e,n.prototype=Object.create(e.prototype,{constructor:{value:n,enumerable:!1,writable:!0,configurable:!0}})}:n.exports=function(n,e){n.super_=e;var t=function(){};t.prototype=e.prototype,n.prototype=new t,n.prototype.constructor=n}},function(n,e){n.exports="'use strict';\n\nvar _typeof2 = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/******/(function (modules) {\n  // webpackBootstrap\n  /******/ // The module cache\n  /******/var installedModules = {};\n  /******/\n  /******/ // The require function\n  /******/function __webpack_require__(moduleId) {\n    /******/\n    /******/ // Check if module is in cache\n    /******/if (installedModules[moduleId]) {\n      /******/return installedModules[moduleId].exports;\n      /******/\n    }\n    /******/ // Create a new module (and put it into the cache)\n    /******/var module = installedModules[moduleId] = {\n      /******/i: moduleId,\n      /******/l: false,\n      /******/exports: {}\n      /******/ };\n    /******/\n    /******/ // Execute the module function\n    /******/modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n    /******/ // Flag the module as loaded\n    /******/module.l = true;\n    /******/\n    /******/ // Return the exports of the module\n    /******/return module.exports;\n    /******/\n  }\n  /******/\n  /******/\n  /******/ // expose the modules object (__webpack_modules__)\n  /******/__webpack_require__.m = modules;\n  /******/\n  /******/ // expose the module cache\n  /******/__webpack_require__.c = installedModules;\n  /******/\n  /******/ // identity function for calling harmony imports with the correct context\n  /******/__webpack_require__.i = function (value) {\n    return value;\n  };\n  /******/\n  /******/ // define getter function for harmony exports\n  /******/__webpack_require__.d = function (exports, name, getter) {\n    /******/if (!__webpack_require__.o(exports, name)) {\n      /******/Object.defineProperty(exports, name, {\n        /******/configurable: false,\n        /******/enumerable: true,\n        /******/get: getter\n        /******/ });\n      /******/\n    }\n    /******/\n  };\n  /******/\n  /******/ // getDefaultExport function for compatibility with non-harmony modules\n  /******/__webpack_require__.n = function (module) {\n    /******/var getter = module && module.__esModule ?\n    /******/function getDefault() {\n      return module['default'];\n    } :\n    /******/function getModuleExports() {\n      return module;\n    };\n    /******/__webpack_require__.d(getter, 'a', getter);\n    /******/return getter;\n    /******/\n  };\n  /******/\n  /******/ // Object.prototype.hasOwnProperty.call\n  /******/__webpack_require__.o = function (object, property) {\n    return Object.prototype.hasOwnProperty.call(object, property);\n  };\n  /******/\n  /******/ // __webpack_public_path__\n  /******/__webpack_require__.p = \"\";\n  /******/\n  /******/ // Load entry module and return exports\n  /******/return __webpack_require__(__webpack_require__.s = 22);\n  /******/\n})(\n/************************************************************************/\n/******/[\n/* 0 */\n/***/function (module, exports, __webpack_require__) {\n\n  \"use strict\";\n\n  var hash = exports;\n\n  hash.utils = __webpack_require__(10);\n  hash.common = __webpack_require__(6);\n  hash.sha = __webpack_require__(9);\n  hash.ripemd = __webpack_require__(8);\n  hash.hmac = __webpack_require__(7);\n\n  // Proxy hash functions to the main object\n  hash.sha1 = hash.sha.sha1;\n  hash.sha256 = hash.sha.sha256;\n  hash.sha224 = hash.sha.sha224;\n  hash.sha384 = hash.sha.sha384;\n  hash.sha512 = hash.sha.sha512;\n  hash.ripemd160 = hash.ripemd.ripemd160;\n\n  /***/\n},\n/* 1 */\n/***/function (module, exports, __webpack_require__) {\n\n  \"use strict\";\n  /* WEBPACK VAR INJECTION */\n  (function (global) {\n    /*!\n    * The buffer module from node.js, for the browser.\n    *\n    * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n    * @license  MIT\n    */\n    /* eslint-disable no-proto */\n\n    var base64 = __webpack_require__(5);\n    var ieee754 = __webpack_require__(11);\n    var isArray = __webpack_require__(13);\n\n    exports.Buffer = Buffer;\n    exports.SlowBuffer = SlowBuffer;\n    exports.INSPECT_MAX_BYTES = 50;\n\n    /**\n     * If `Buffer.TYPED_ARRAY_SUPPORT`:\n     *   === true    Use Uint8Array implementation (fastest)\n     *   === false   Use Object implementation (most compatible, even IE6)\n     *\n     * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n     * Opera 11.6+, iOS 4.2+.\n     *\n     * Due to various browser bugs, sometimes the Object implementation will be used even\n     * when the browser supports typed arrays.\n     *\n     * Note:\n     *\n     *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n     *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n     *\n     *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n     *\n     *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n     *     incorrect length in some situations.\n    \n     * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n     * get the Object implementation, which is slower but behaves correctly.\n     */\n    Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined ? global.TYPED_ARRAY_SUPPORT : typedArraySupport\n\n    /*\n     * Export kMaxLength after typed array support is determined.\n     */\n    ();exports.kMaxLength = kMaxLength();\n\n    function typedArraySupport() {\n      try {\n        var arr = new Uint8Array(1);\n        arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function foo() {\n            return 42;\n          } };\n        return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0; // ie10 has broken `subarray`\n      } catch (e) {\n        return false;\n      }\n    }\n\n    function kMaxLength() {\n      return Buffer.TYPED_ARRAY_SUPPORT ? 0x7fffffff : 0x3fffffff;\n    }\n\n    function createBuffer(that, length) {\n      if (kMaxLength() < length) {\n        throw new RangeError('Invalid typed array length');\n      }\n      if (Buffer.TYPED_ARRAY_SUPPORT) {\n        // Return an augmented `Uint8Array` instance, for best performance\n        that = new Uint8Array(length);\n        that.__proto__ = Buffer.prototype;\n      } else {\n        // Fallback: Return an object instance of the Buffer class\n        if (that === null) {\n          that = new Buffer(length);\n        }\n        that.length = length;\n      }\n\n      return that;\n    }\n\n    /**\n     * The Buffer constructor returns instances of `Uint8Array` that have their\n     * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n     * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n     * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n     * returns a single octet.\n     *\n     * The `Uint8Array` prototype remains unmodified.\n     */\n\n    function Buffer(arg, encodingOrOffset, length) {\n      if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n        return new Buffer(arg, encodingOrOffset, length);\n      }\n\n      // Common case.\n      if (typeof arg === 'number') {\n        if (typeof encodingOrOffset === 'string') {\n          throw new Error('If encoding is specified then the first argument must be a string');\n        }\n        return allocUnsafe(this, arg);\n      }\n      return from(this, arg, encodingOrOffset, length);\n    }\n\n    Buffer.poolSize = 8192; // not used by this implementation\n\n    // TODO: Legacy, not needed anymore. Remove in next major version.\n    Buffer._augment = function (arr) {\n      arr.__proto__ = Buffer.prototype;\n      return arr;\n    };\n\n    function from(that, value, encodingOrOffset, length) {\n      if (typeof value === 'number') {\n        throw new TypeError('\"value\" argument must not be a number');\n      }\n\n      if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n        return fromArrayBuffer(that, value, encodingOrOffset, length);\n      }\n\n      if (typeof value === 'string') {\n        return fromString(that, value, encodingOrOffset);\n      }\n\n      return fromObject(that, value);\n    }\n\n    /**\n     * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n     * if value is a number.\n     * Buffer.from(str[, encoding])\n     * Buffer.from(array)\n     * Buffer.from(buffer)\n     * Buffer.from(arrayBuffer[, byteOffset[, length]])\n     **/\n    Buffer.from = function (value, encodingOrOffset, length) {\n      return from(null, value, encodingOrOffset, length);\n    };\n\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n      Buffer.prototype.__proto__ = Uint8Array.prototype;\n      Buffer.__proto__ = Uint8Array;\n      if (typeof Symbol !== 'undefined' && Symbol.species && Buffer[Symbol.species] === Buffer) {\n        // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n        Object.defineProperty(Buffer, Symbol.species, {\n          value: null,\n          configurable: true\n        });\n      }\n    }\n\n    function assertSize(size) {\n      if (typeof size !== 'number') {\n        throw new TypeError('\"size\" argument must be a number');\n      } else if (size < 0) {\n        throw new RangeError('\"size\" argument must not be negative');\n      }\n    }\n\n    function alloc(that, size, fill, encoding) {\n      assertSize(size);\n      if (size <= 0) {\n        return createBuffer(that, size);\n      }\n      if (fill !== undefined) {\n        // Only pay attention to encoding if it's a string. This\n        // prevents accidentally sending in a number that would\n        // be interpretted as a start offset.\n        return typeof encoding === 'string' ? createBuffer(that, size).fill(fill, encoding) : createBuffer(that, size).fill(fill);\n      }\n      return createBuffer(that, size);\n    }\n\n    /**\n     * Creates a new filled Buffer instance.\n     * alloc(size[, fill[, encoding]])\n     **/\n    Buffer.alloc = function (size, fill, encoding) {\n      return alloc(null, size, fill, encoding);\n    };\n\n    function allocUnsafe(that, size) {\n      assertSize(size);\n      that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n      if (!Buffer.TYPED_ARRAY_SUPPORT) {\n        for (var i = 0; i < size; ++i) {\n          that[i] = 0;\n        }\n      }\n      return that;\n    }\n\n    /**\n     * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n     * */\n    Buffer.allocUnsafe = function (size) {\n      return allocUnsafe(null, size);\n    };\n    /**\n     * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n     */\n    Buffer.allocUnsafeSlow = function (size) {\n      return allocUnsafe(null, size);\n    };\n\n    function fromString(that, string, encoding) {\n      if (typeof encoding !== 'string' || encoding === '') {\n        encoding = 'utf8';\n      }\n\n      if (!Buffer.isEncoding(encoding)) {\n        throw new TypeError('\"encoding\" must be a valid string encoding');\n      }\n\n      var length = byteLength(string, encoding) | 0;\n      that = createBuffer(that, length);\n\n      var actual = that.write(string, encoding);\n\n      if (actual !== length) {\n        // Writing a hex string, for example, that contains invalid characters will\n        // cause everything after the first invalid character to be ignored. (e.g.\n        // 'abxxcd' will be treated as 'ab')\n        that = that.slice(0, actual);\n      }\n\n      return that;\n    }\n\n    function fromArrayLike(that, array) {\n      var length = array.length < 0 ? 0 : checked(array.length) | 0;\n      that = createBuffer(that, length);\n      for (var i = 0; i < length; i += 1) {\n        that[i] = array[i] & 255;\n      }\n      return that;\n    }\n\n    function fromArrayBuffer(that, array, byteOffset, length) {\n      array.byteLength; // this throws if `array` is not a valid ArrayBuffer\n\n      if (byteOffset < 0 || array.byteLength < byteOffset) {\n        throw new RangeError('\\'offset\\' is out of bounds');\n      }\n\n      if (array.byteLength < byteOffset + (length || 0)) {\n        throw new RangeError('\\'length\\' is out of bounds');\n      }\n\n      if (byteOffset === undefined && length === undefined) {\n        array = new Uint8Array(array);\n      } else if (length === undefined) {\n        array = new Uint8Array(array, byteOffset);\n      } else {\n        array = new Uint8Array(array, byteOffset, length);\n      }\n\n      if (Buffer.TYPED_ARRAY_SUPPORT) {\n        // Return an augmented `Uint8Array` instance, for best performance\n        that = array;\n        that.__proto__ = Buffer.prototype;\n      } else {\n        // Fallback: Return an object instance of the Buffer class\n        that = fromArrayLike(that, array);\n      }\n      return that;\n    }\n\n    function fromObject(that, obj) {\n      if (Buffer.isBuffer(obj)) {\n        var len = checked(obj.length) | 0;\n        that = createBuffer(that, len);\n\n        if (that.length === 0) {\n          return that;\n        }\n\n        obj.copy(that, 0, 0, len);\n        return that;\n      }\n\n      if (obj) {\n        if (typeof ArrayBuffer !== 'undefined' && obj.buffer instanceof ArrayBuffer || 'length' in obj) {\n          if (typeof obj.length !== 'number' || isnan(obj.length)) {\n            return createBuffer(that, 0);\n          }\n          return fromArrayLike(that, obj);\n        }\n\n        if (obj.type === 'Buffer' && isArray(obj.data)) {\n          return fromArrayLike(that, obj.data);\n        }\n      }\n\n      throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.');\n    }\n\n    function checked(length) {\n      // Note: cannot use `length < kMaxLength()` here because that fails when\n      // length is NaN (which is otherwise coerced to zero.)\n      if (length >= kMaxLength()) {\n        throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + kMaxLength().toString(16) + ' bytes');\n      }\n      return length | 0;\n    }\n\n    function SlowBuffer(length) {\n      if (+length != length) {\n        // eslint-disable-line eqeqeq\n        length = 0;\n      }\n      return Buffer.alloc(+length);\n    }\n\n    Buffer.isBuffer = function isBuffer(b) {\n      return !!(b != null && b._isBuffer);\n    };\n\n    Buffer.compare = function compare(a, b) {\n      if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n        throw new TypeError('Arguments must be Buffers');\n      }\n\n      if (a === b) return 0;\n\n      var x = a.length;\n      var y = b.length;\n\n      for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n        if (a[i] !== b[i]) {\n          x = a[i];\n          y = b[i];\n          break;\n        }\n      }\n\n      if (x < y) return -1;\n      if (y < x) return 1;\n      return 0;\n    };\n\n    Buffer.isEncoding = function isEncoding(encoding) {\n      switch (String(encoding).toLowerCase()) {\n        case 'hex':\n        case 'utf8':\n        case 'utf-8':\n        case 'ascii':\n        case 'latin1':\n        case 'binary':\n        case 'base64':\n        case 'ucs2':\n        case 'ucs-2':\n        case 'utf16le':\n        case 'utf-16le':\n          return true;\n        default:\n          return false;\n      }\n    };\n\n    Buffer.concat = function concat(list, length) {\n      if (!isArray(list)) {\n        throw new TypeError('\"list\" argument must be an Array of Buffers');\n      }\n\n      if (list.length === 0) {\n        return Buffer.alloc(0);\n      }\n\n      var i;\n      if (length === undefined) {\n        length = 0;\n        for (i = 0; i < list.length; ++i) {\n          length += list[i].length;\n        }\n      }\n\n      var buffer = Buffer.allocUnsafe(length);\n      var pos = 0;\n      for (i = 0; i < list.length; ++i) {\n        var buf = list[i];\n        if (!Buffer.isBuffer(buf)) {\n          throw new TypeError('\"list\" argument must be an Array of Buffers');\n        }\n        buf.copy(buffer, pos);\n        pos += buf.length;\n      }\n      return buffer;\n    };\n\n    function byteLength(string, encoding) {\n      if (Buffer.isBuffer(string)) {\n        return string.length;\n      }\n      if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n        return string.byteLength;\n      }\n      if (typeof string !== 'string') {\n        string = '' + string;\n      }\n\n      var len = string.length;\n      if (len === 0) return 0;\n\n      // Use a for loop to avoid recursion\n      var loweredCase = false;\n      for (;;) {\n        switch (encoding) {\n          case 'ascii':\n          case 'latin1':\n          case 'binary':\n            return len;\n          case 'utf8':\n          case 'utf-8':\n          case undefined:\n            return utf8ToBytes(string).length;\n          case 'ucs2':\n          case 'ucs-2':\n          case 'utf16le':\n          case 'utf-16le':\n            return len * 2;\n          case 'hex':\n            return len >>> 1;\n          case 'base64':\n            return base64ToBytes(string).length;\n          default:\n            if (loweredCase) return utf8ToBytes(string).length; // assume utf8\n            encoding = ('' + encoding).toLowerCase();\n            loweredCase = true;\n        }\n      }\n    }\n    Buffer.byteLength = byteLength;\n\n    function slowToString(encoding, start, end) {\n      var loweredCase = false;\n\n      // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n      // property of a typed array.\n\n      // This behaves neither like String nor Uint8Array in that we set start/end\n      // to their upper/lower bounds if the value passed is out of range.\n      // undefined is handled specially as per ECMA-262 6th Edition,\n      // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n      if (start === undefined || start < 0) {\n        start = 0;\n      }\n      // Return early if start > this.length. Done here to prevent potential uint32\n      // coercion fail below.\n      if (start > this.length) {\n        return '';\n      }\n\n      if (end === undefined || end > this.length) {\n        end = this.length;\n      }\n\n      if (end <= 0) {\n        return '';\n      }\n\n      // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n      end >>>= 0;\n      start >>>= 0;\n\n      if (end <= start) {\n        return '';\n      }\n\n      if (!encoding) encoding = 'utf8';\n\n      while (true) {\n        switch (encoding) {\n          case 'hex':\n            return hexSlice(this, start, end);\n\n          case 'utf8':\n          case 'utf-8':\n            return utf8Slice(this, start, end);\n\n          case 'ascii':\n            return asciiSlice(this, start, end);\n\n          case 'latin1':\n          case 'binary':\n            return latin1Slice(this, start, end);\n\n          case 'base64':\n            return base64Slice(this, start, end);\n\n          case 'ucs2':\n          case 'ucs-2':\n          case 'utf16le':\n          case 'utf-16le':\n            return utf16leSlice(this, start, end);\n\n          default:\n            if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n            encoding = (encoding + '').toLowerCase();\n            loweredCase = true;\n        }\n      }\n    }\n\n    // The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n    // Buffer instances.\n    Buffer.prototype._isBuffer = true;\n\n    function swap(b, n, m) {\n      var i = b[n];\n      b[n] = b[m];\n      b[m] = i;\n    }\n\n    Buffer.prototype.swap16 = function swap16() {\n      var len = this.length;\n      if (len % 2 !== 0) {\n        throw new RangeError('Buffer size must be a multiple of 16-bits');\n      }\n      for (var i = 0; i < len; i += 2) {\n        swap(this, i, i + 1);\n      }\n      return this;\n    };\n\n    Buffer.prototype.swap32 = function swap32() {\n      var len = this.length;\n      if (len % 4 !== 0) {\n        throw new RangeError('Buffer size must be a multiple of 32-bits');\n      }\n      for (var i = 0; i < len; i += 4) {\n        swap(this, i, i + 3);\n        swap(this, i + 1, i + 2);\n      }\n      return this;\n    };\n\n    Buffer.prototype.swap64 = function swap64() {\n      var len = this.length;\n      if (len % 8 !== 0) {\n        throw new RangeError('Buffer size must be a multiple of 64-bits');\n      }\n      for (var i = 0; i < len; i += 8) {\n        swap(this, i, i + 7);\n        swap(this, i + 1, i + 6);\n        swap(this, i + 2, i + 5);\n        swap(this, i + 3, i + 4);\n      }\n      return this;\n    };\n\n    Buffer.prototype.toString = function toString() {\n      var length = this.length | 0;\n      if (length === 0) return '';\n      if (arguments.length === 0) return utf8Slice(this, 0, length);\n      return slowToString.apply(this, arguments);\n    };\n\n    Buffer.prototype.equals = function equals(b) {\n      if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n      if (this === b) return true;\n      return Buffer.compare(this, b) === 0;\n    };\n\n    Buffer.prototype.inspect = function inspect() {\n      var str = '';\n      var max = exports.INSPECT_MAX_BYTES;\n      if (this.length > 0) {\n        str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n        if (this.length > max) str += ' ... ';\n      }\n      return '<Buffer ' + str + '>';\n    };\n\n    Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n      if (!Buffer.isBuffer(target)) {\n        throw new TypeError('Argument must be a Buffer');\n      }\n\n      if (start === undefined) {\n        start = 0;\n      }\n      if (end === undefined) {\n        end = target ? target.length : 0;\n      }\n      if (thisStart === undefined) {\n        thisStart = 0;\n      }\n      if (thisEnd === undefined) {\n        thisEnd = this.length;\n      }\n\n      if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n        throw new RangeError('out of range index');\n      }\n\n      if (thisStart >= thisEnd && start >= end) {\n        return 0;\n      }\n      if (thisStart >= thisEnd) {\n        return -1;\n      }\n      if (start >= end) {\n        return 1;\n      }\n\n      start >>>= 0;\n      end >>>= 0;\n      thisStart >>>= 0;\n      thisEnd >>>= 0;\n\n      if (this === target) return 0;\n\n      var x = thisEnd - thisStart;\n      var y = end - start;\n      var len = Math.min(x, y);\n\n      var thisCopy = this.slice(thisStart, thisEnd);\n      var targetCopy = target.slice(start, end);\n\n      for (var i = 0; i < len; ++i) {\n        if (thisCopy[i] !== targetCopy[i]) {\n          x = thisCopy[i];\n          y = targetCopy[i];\n          break;\n        }\n      }\n\n      if (x < y) return -1;\n      if (y < x) return 1;\n      return 0;\n    };\n\n    // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n    // OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n    //\n    // Arguments:\n    // - buffer - a Buffer to search\n    // - val - a string, Buffer, or number\n    // - byteOffset - an index into `buffer`; will be clamped to an int32\n    // - encoding - an optional encoding, relevant is val is a string\n    // - dir - true for indexOf, false for lastIndexOf\n    function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n      // Empty buffer means no match\n      if (buffer.length === 0) return -1;\n\n      // Normalize byteOffset\n      if (typeof byteOffset === 'string') {\n        encoding = byteOffset;\n        byteOffset = 0;\n      } else if (byteOffset > 0x7fffffff) {\n        byteOffset = 0x7fffffff;\n      } else if (byteOffset < -0x80000000) {\n        byteOffset = -0x80000000;\n      }\n      byteOffset = +byteOffset; // Coerce to Number.\n      if (isNaN(byteOffset)) {\n        // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n        byteOffset = dir ? 0 : buffer.length - 1;\n      }\n\n      // Normalize byteOffset: negative offsets start from the end of the buffer\n      if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n      if (byteOffset >= buffer.length) {\n        if (dir) return -1;else byteOffset = buffer.length - 1;\n      } else if (byteOffset < 0) {\n        if (dir) byteOffset = 0;else return -1;\n      }\n\n      // Normalize val\n      if (typeof val === 'string') {\n        val = Buffer.from(val, encoding);\n      }\n\n      // Finally, search either indexOf (if dir is true) or lastIndexOf\n      if (Buffer.isBuffer(val)) {\n        // Special case: looking for empty string/buffer always fails\n        if (val.length === 0) {\n          return -1;\n        }\n        return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n      } else if (typeof val === 'number') {\n        val = val & 0xFF; // Search for a byte value [0-255]\n        if (Buffer.TYPED_ARRAY_SUPPORT && typeof Uint8Array.prototype.indexOf === 'function') {\n          if (dir) {\n            return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n          } else {\n            return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n          }\n        }\n        return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n      }\n\n      throw new TypeError('val must be string, number or Buffer');\n    }\n\n    function arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n      var indexSize = 1;\n      var arrLength = arr.length;\n      var valLength = val.length;\n\n      if (encoding !== undefined) {\n        encoding = String(encoding).toLowerCase();\n        if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n          if (arr.length < 2 || val.length < 2) {\n            return -1;\n          }\n          indexSize = 2;\n          arrLength /= 2;\n          valLength /= 2;\n          byteOffset /= 2;\n        }\n      }\n\n      function read(buf, i) {\n        if (indexSize === 1) {\n          return buf[i];\n        } else {\n          return buf.readUInt16BE(i * indexSize);\n        }\n      }\n\n      var i;\n      if (dir) {\n        var foundIndex = -1;\n        for (i = byteOffset; i < arrLength; i++) {\n          if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n            if (foundIndex === -1) foundIndex = i;\n            if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n          } else {\n            if (foundIndex !== -1) i -= i - foundIndex;\n            foundIndex = -1;\n          }\n        }\n      } else {\n        if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n        for (i = byteOffset; i >= 0; i--) {\n          var found = true;\n          for (var j = 0; j < valLength; j++) {\n            if (read(arr, i + j) !== read(val, j)) {\n              found = false;\n              break;\n            }\n          }\n          if (found) return i;\n        }\n      }\n\n      return -1;\n    }\n\n    Buffer.prototype.includes = function includes(val, byteOffset, encoding) {\n      return this.indexOf(val, byteOffset, encoding) !== -1;\n    };\n\n    Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n      return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n    };\n\n    Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n      return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n    };\n\n    function hexWrite(buf, string, offset, length) {\n      offset = Number(offset) || 0;\n      var remaining = buf.length - offset;\n      if (!length) {\n        length = remaining;\n      } else {\n        length = Number(length);\n        if (length > remaining) {\n          length = remaining;\n        }\n      }\n\n      // must be an even number of digits\n      var strLen = string.length;\n      if (strLen % 2 !== 0) throw new TypeError('Invalid hex string');\n\n      if (length > strLen / 2) {\n        length = strLen / 2;\n      }\n      for (var i = 0; i < length; ++i) {\n        var parsed = parseInt(string.substr(i * 2, 2), 16);\n        if (isNaN(parsed)) return i;\n        buf[offset + i] = parsed;\n      }\n      return i;\n    }\n\n    function utf8Write(buf, string, offset, length) {\n      return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n    }\n\n    function asciiWrite(buf, string, offset, length) {\n      return blitBuffer(asciiToBytes(string), buf, offset, length);\n    }\n\n    function latin1Write(buf, string, offset, length) {\n      return asciiWrite(buf, string, offset, length);\n    }\n\n    function base64Write(buf, string, offset, length) {\n      return blitBuffer(base64ToBytes(string), buf, offset, length);\n    }\n\n    function ucs2Write(buf, string, offset, length) {\n      return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n    }\n\n    Buffer.prototype.write = function write(string, offset, length, encoding) {\n      // Buffer#write(string)\n      if (offset === undefined) {\n        encoding = 'utf8';\n        length = this.length;\n        offset = 0;\n        // Buffer#write(string, encoding)\n      } else if (length === undefined && typeof offset === 'string') {\n        encoding = offset;\n        length = this.length;\n        offset = 0;\n        // Buffer#write(string, offset[, length][, encoding])\n      } else if (isFinite(offset)) {\n        offset = offset | 0;\n        if (isFinite(length)) {\n          length = length | 0;\n          if (encoding === undefined) encoding = 'utf8';\n        } else {\n          encoding = length;\n          length = undefined;\n        }\n        // legacy write(string, encoding, offset, length) - remove in v0.13\n      } else {\n        throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n      }\n\n      var remaining = this.length - offset;\n      if (length === undefined || length > remaining) length = remaining;\n\n      if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n        throw new RangeError('Attempt to write outside buffer bounds');\n      }\n\n      if (!encoding) encoding = 'utf8';\n\n      var loweredCase = false;\n      for (;;) {\n        switch (encoding) {\n          case 'hex':\n            return hexWrite(this, string, offset, length);\n\n          case 'utf8':\n          case 'utf-8':\n            return utf8Write(this, string, offset, length);\n\n          case 'ascii':\n            return asciiWrite(this, string, offset, length);\n\n          case 'latin1':\n          case 'binary':\n            return latin1Write(this, string, offset, length);\n\n          case 'base64':\n            // Warning: maxLength not taken into account in base64Write\n            return base64Write(this, string, offset, length);\n\n          case 'ucs2':\n          case 'ucs-2':\n          case 'utf16le':\n          case 'utf-16le':\n            return ucs2Write(this, string, offset, length);\n\n          default:\n            if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n            encoding = ('' + encoding).toLowerCase();\n            loweredCase = true;\n        }\n      }\n    };\n\n    Buffer.prototype.toJSON = function toJSON() {\n      return {\n        type: 'Buffer',\n        data: Array.prototype.slice.call(this._arr || this, 0)\n      };\n    };\n\n    function base64Slice(buf, start, end) {\n      if (start === 0 && end === buf.length) {\n        return base64.fromByteArray(buf);\n      } else {\n        return base64.fromByteArray(buf.slice(start, end));\n      }\n    }\n\n    function utf8Slice(buf, start, end) {\n      end = Math.min(buf.length, end);\n      var res = [];\n\n      var i = start;\n      while (i < end) {\n        var firstByte = buf[i];\n        var codePoint = null;\n        var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence <= end) {\n          var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n          switch (bytesPerSequence) {\n            case 1:\n              if (firstByte < 0x80) {\n                codePoint = firstByte;\n              }\n              break;\n            case 2:\n              secondByte = buf[i + 1];\n              if ((secondByte & 0xC0) === 0x80) {\n                tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n                if (tempCodePoint > 0x7F) {\n                  codePoint = tempCodePoint;\n                }\n              }\n              break;\n            case 3:\n              secondByte = buf[i + 1];\n              thirdByte = buf[i + 2];\n              if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n                tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n                if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n                  codePoint = tempCodePoint;\n                }\n              }\n              break;\n            case 4:\n              secondByte = buf[i + 1];\n              thirdByte = buf[i + 2];\n              fourthByte = buf[i + 3];\n              if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n                tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n                if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n                  codePoint = tempCodePoint;\n                }\n              }\n          }\n        }\n\n        if (codePoint === null) {\n          // we did not generate a valid codePoint so insert a\n          // replacement char (U+FFFD) and advance only 1 byte\n          codePoint = 0xFFFD;\n          bytesPerSequence = 1;\n        } else if (codePoint > 0xFFFF) {\n          // encode to utf16 (surrogate pair dance)\n          codePoint -= 0x10000;\n          res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n          codePoint = 0xDC00 | codePoint & 0x3FF;\n        }\n\n        res.push(codePoint);\n        i += bytesPerSequence;\n      }\n\n      return decodeCodePointsArray(res);\n    }\n\n    // Based on http://stackoverflow.com/a/22747272/680742, the browser with\n    // the lowest limit is Chrome, with 0x10000 args.\n    // We go 1 magnitude less, for safety\n    var MAX_ARGUMENTS_LENGTH = 0x1000;\n\n    function decodeCodePointsArray(codePoints) {\n      var len = codePoints.length;\n      if (len <= MAX_ARGUMENTS_LENGTH) {\n        return String.fromCharCode.apply(String, codePoints // avoid extra slice()\n        );\n      }\n\n      // Decode in chunks to avoid \"call stack size exceeded\".\n      var res = '';\n      var i = 0;\n      while (i < len) {\n        res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n      }\n      return res;\n    }\n\n    function asciiSlice(buf, start, end) {\n      var ret = '';\n      end = Math.min(buf.length, end);\n\n      for (var i = start; i < end; ++i) {\n        ret += String.fromCharCode(buf[i] & 0x7F);\n      }\n      return ret;\n    }\n\n    function latin1Slice(buf, start, end) {\n      var ret = '';\n      end = Math.min(buf.length, end);\n\n      for (var i = start; i < end; ++i) {\n        ret += String.fromCharCode(buf[i]);\n      }\n      return ret;\n    }\n\n    function hexSlice(buf, start, end) {\n      var len = buf.length;\n\n      if (!start || start < 0) start = 0;\n      if (!end || end < 0 || end > len) end = len;\n\n      var out = '';\n      for (var i = start; i < end; ++i) {\n        out += toHex(buf[i]);\n      }\n      return out;\n    }\n\n    function utf16leSlice(buf, start, end) {\n      var bytes = buf.slice(start, end);\n      var res = '';\n      for (var i = 0; i < bytes.length; i += 2) {\n        res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n      }\n      return res;\n    }\n\n    Buffer.prototype.slice = function slice(start, end) {\n      var len = this.length;\n      start = ~~start;\n      end = end === undefined ? len : ~~end;\n\n      if (start < 0) {\n        start += len;\n        if (start < 0) start = 0;\n      } else if (start > len) {\n        start = len;\n      }\n\n      if (end < 0) {\n        end += len;\n        if (end < 0) end = 0;\n      } else if (end > len) {\n        end = len;\n      }\n\n      if (end < start) end = start;\n\n      var newBuf;\n      if (Buffer.TYPED_ARRAY_SUPPORT) {\n        newBuf = this.subarray(start, end);\n        newBuf.__proto__ = Buffer.prototype;\n      } else {\n        var sliceLen = end - start;\n        newBuf = new Buffer(sliceLen, undefined);\n        for (var i = 0; i < sliceLen; ++i) {\n          newBuf[i] = this[i + start];\n        }\n      }\n\n      return newBuf;\n    };\n\n    /*\n     * Need to make sure that buffer isn't trying to write out of bounds.\n     */\n    function checkOffset(offset, ext, length) {\n      if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n      if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n    }\n\n    Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n      offset = offset | 0;\n      byteLength = byteLength | 0;\n      if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n      var val = this[offset];\n      var mul = 1;\n      var i = 0;\n      while (++i < byteLength && (mul *= 0x100)) {\n        val += this[offset + i] * mul;\n      }\n\n      return val;\n    };\n\n    Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n      offset = offset | 0;\n      byteLength = byteLength | 0;\n      if (!noAssert) {\n        checkOffset(offset, byteLength, this.length);\n      }\n\n      var val = this[offset + --byteLength];\n      var mul = 1;\n      while (byteLength > 0 && (mul *= 0x100)) {\n        val += this[offset + --byteLength] * mul;\n      }\n\n      return val;\n    };\n\n    Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n      if (!noAssert) checkOffset(offset, 1, this.length);\n      return this[offset];\n    };\n\n    Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n      if (!noAssert) checkOffset(offset, 2, this.length);\n      return this[offset] | this[offset + 1] << 8;\n    };\n\n    Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n      if (!noAssert) checkOffset(offset, 2, this.length);\n      return this[offset] << 8 | this[offset + 1];\n    };\n\n    Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n      if (!noAssert) checkOffset(offset, 4, this.length);\n\n      return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n    };\n\n    Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n      if (!noAssert) checkOffset(offset, 4, this.length);\n\n      return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n    };\n\n    Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n      offset = offset | 0;\n      byteLength = byteLength | 0;\n      if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n      var val = this[offset];\n      var mul = 1;\n      var i = 0;\n      while (++i < byteLength && (mul *= 0x100)) {\n        val += this[offset + i] * mul;\n      }\n      mul *= 0x80;\n\n      if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n      return val;\n    };\n\n    Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n      offset = offset | 0;\n      byteLength = byteLength | 0;\n      if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n      var i = byteLength;\n      var mul = 1;\n      var val = this[offset + --i];\n      while (i > 0 && (mul *= 0x100)) {\n        val += this[offset + --i] * mul;\n      }\n      mul *= 0x80;\n\n      if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n      return val;\n    };\n\n    Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n      if (!noAssert) checkOffset(offset, 1, this.length);\n      if (!(this[offset] & 0x80)) return this[offset];\n      return (0xff - this[offset] + 1) * -1;\n    };\n\n    Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n      if (!noAssert) checkOffset(offset, 2, this.length);\n      var val = this[offset] | this[offset + 1] << 8;\n      return val & 0x8000 ? val | 0xFFFF0000 : val;\n    };\n\n    Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n      if (!noAssert) checkOffset(offset, 2, this.length);\n      var val = this[offset + 1] | this[offset] << 8;\n      return val & 0x8000 ? val | 0xFFFF0000 : val;\n    };\n\n    Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n      if (!noAssert) checkOffset(offset, 4, this.length);\n\n      return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n    };\n\n    Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n      if (!noAssert) checkOffset(offset, 4, this.length);\n\n      return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n    };\n\n    Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n      if (!noAssert) checkOffset(offset, 4, this.length);\n      return ieee754.read(this, offset, true, 23, 4);\n    };\n\n    Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n      if (!noAssert) checkOffset(offset, 4, this.length);\n      return ieee754.read(this, offset, false, 23, 4);\n    };\n\n    Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n      if (!noAssert) checkOffset(offset, 8, this.length);\n      return ieee754.read(this, offset, true, 52, 8);\n    };\n\n    Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n      if (!noAssert) checkOffset(offset, 8, this.length);\n      return ieee754.read(this, offset, false, 52, 8);\n    };\n\n    function checkInt(buf, value, offset, ext, max, min) {\n      if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n      if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n      if (offset + ext > buf.length) throw new RangeError('Index out of range');\n    }\n\n    Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n      value = +value;\n      offset = offset | 0;\n      byteLength = byteLength | 0;\n      if (!noAssert) {\n        var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n        checkInt(this, value, offset, byteLength, maxBytes, 0);\n      }\n\n      var mul = 1;\n      var i = 0;\n      this[offset] = value & 0xFF;\n      while (++i < byteLength && (mul *= 0x100)) {\n        this[offset + i] = value / mul & 0xFF;\n      }\n\n      return offset + byteLength;\n    };\n\n    Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n      value = +value;\n      offset = offset | 0;\n      byteLength = byteLength | 0;\n      if (!noAssert) {\n        var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n        checkInt(this, value, offset, byteLength, maxBytes, 0);\n      }\n\n      var i = byteLength - 1;\n      var mul = 1;\n      this[offset + i] = value & 0xFF;\n      while (--i >= 0 && (mul *= 0x100)) {\n        this[offset + i] = value / mul & 0xFF;\n      }\n\n      return offset + byteLength;\n    };\n\n    Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n      value = +value;\n      offset = offset | 0;\n      if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n      if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n      this[offset] = value & 0xff;\n      return offset + 1;\n    };\n\n    function objectWriteUInt16(buf, value, offset, littleEndian) {\n      if (value < 0) value = 0xffff + value + 1;\n      for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n        buf[offset + i] = (value & 0xff << 8 * (littleEndian ? i : 1 - i)) >>> (littleEndian ? i : 1 - i) * 8;\n      }\n    }\n\n    Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n      value = +value;\n      offset = offset | 0;\n      if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n      if (Buffer.TYPED_ARRAY_SUPPORT) {\n        this[offset] = value & 0xff;\n        this[offset + 1] = value >>> 8;\n      } else {\n        objectWriteUInt16(this, value, offset, true);\n      }\n      return offset + 2;\n    };\n\n    Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n      value = +value;\n      offset = offset | 0;\n      if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n      if (Buffer.TYPED_ARRAY_SUPPORT) {\n        this[offset] = value >>> 8;\n        this[offset + 1] = value & 0xff;\n      } else {\n        objectWriteUInt16(this, value, offset, false);\n      }\n      return offset + 2;\n    };\n\n    function objectWriteUInt32(buf, value, offset, littleEndian) {\n      if (value < 0) value = 0xffffffff + value + 1;\n      for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n        buf[offset + i] = value >>> (littleEndian ? i : 3 - i) * 8 & 0xff;\n      }\n    }\n\n    Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n      value = +value;\n      offset = offset | 0;\n      if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n      if (Buffer.TYPED_ARRAY_SUPPORT) {\n        this[offset + 3] = value >>> 24;\n        this[offset + 2] = value >>> 16;\n        this[offset + 1] = value >>> 8;\n        this[offset] = value & 0xff;\n      } else {\n        objectWriteUInt32(this, value, offset, true);\n      }\n      return offset + 4;\n    };\n\n    Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n      value = +value;\n      offset = offset | 0;\n      if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n      if (Buffer.TYPED_ARRAY_SUPPORT) {\n        this[offset] = value >>> 24;\n        this[offset + 1] = value >>> 16;\n        this[offset + 2] = value >>> 8;\n        this[offset + 3] = value & 0xff;\n      } else {\n        objectWriteUInt32(this, value, offset, false);\n      }\n      return offset + 4;\n    };\n\n    Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n      value = +value;\n      offset = offset | 0;\n      if (!noAssert) {\n        var limit = Math.pow(2, 8 * byteLength - 1);\n\n        checkInt(this, value, offset, byteLength, limit - 1, -limit);\n      }\n\n      var i = 0;\n      var mul = 1;\n      var sub = 0;\n      this[offset] = value & 0xFF;\n      while (++i < byteLength && (mul *= 0x100)) {\n        if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n          sub = 1;\n        }\n        this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n      }\n\n      return offset + byteLength;\n    };\n\n    Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n      value = +value;\n      offset = offset | 0;\n      if (!noAssert) {\n        var limit = Math.pow(2, 8 * byteLength - 1);\n\n        checkInt(this, value, offset, byteLength, limit - 1, -limit);\n      }\n\n      var i = byteLength - 1;\n      var mul = 1;\n      var sub = 0;\n      this[offset + i] = value & 0xFF;\n      while (--i >= 0 && (mul *= 0x100)) {\n        if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n          sub = 1;\n        }\n        this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n      }\n\n      return offset + byteLength;\n    };\n\n    Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n      value = +value;\n      offset = offset | 0;\n      if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n      if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n      if (value < 0) value = 0xff + value + 1;\n      this[offset] = value & 0xff;\n      return offset + 1;\n    };\n\n    Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n      value = +value;\n      offset = offset | 0;\n      if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n      if (Buffer.TYPED_ARRAY_SUPPORT) {\n        this[offset] = value & 0xff;\n        this[offset + 1] = value >>> 8;\n      } else {\n        objectWriteUInt16(this, value, offset, true);\n      }\n      return offset + 2;\n    };\n\n    Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n      value = +value;\n      offset = offset | 0;\n      if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n      if (Buffer.TYPED_ARRAY_SUPPORT) {\n        this[offset] = value >>> 8;\n        this[offset + 1] = value & 0xff;\n      } else {\n        objectWriteUInt16(this, value, offset, false);\n      }\n      return offset + 2;\n    };\n\n    Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n      value = +value;\n      offset = offset | 0;\n      if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n      if (Buffer.TYPED_ARRAY_SUPPORT) {\n        this[offset] = value & 0xff;\n        this[offset + 1] = value >>> 8;\n        this[offset + 2] = value >>> 16;\n        this[offset + 3] = value >>> 24;\n      } else {\n        objectWriteUInt32(this, value, offset, true);\n      }\n      return offset + 4;\n    };\n\n    Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n      value = +value;\n      offset = offset | 0;\n      if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n      if (value < 0) value = 0xffffffff + value + 1;\n      if (Buffer.TYPED_ARRAY_SUPPORT) {\n        this[offset] = value >>> 24;\n        this[offset + 1] = value >>> 16;\n        this[offset + 2] = value >>> 8;\n        this[offset + 3] = value & 0xff;\n      } else {\n        objectWriteUInt32(this, value, offset, false);\n      }\n      return offset + 4;\n    };\n\n    function checkIEEE754(buf, value, offset, ext, max, min) {\n      if (offset + ext > buf.length) throw new RangeError('Index out of range');\n      if (offset < 0) throw new RangeError('Index out of range');\n    }\n\n    function writeFloat(buf, value, offset, littleEndian, noAssert) {\n      if (!noAssert) {\n        checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);\n      }\n      ieee754.write(buf, value, offset, littleEndian, 23, 4);\n      return offset + 4;\n    }\n\n    Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n      return writeFloat(this, value, offset, true, noAssert);\n    };\n\n    Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n      return writeFloat(this, value, offset, false, noAssert);\n    };\n\n    function writeDouble(buf, value, offset, littleEndian, noAssert) {\n      if (!noAssert) {\n        checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);\n      }\n      ieee754.write(buf, value, offset, littleEndian, 52, 8);\n      return offset + 8;\n    }\n\n    Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n      return writeDouble(this, value, offset, true, noAssert);\n    };\n\n    Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n      return writeDouble(this, value, offset, false, noAssert);\n    };\n\n    // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n    Buffer.prototype.copy = function copy(target, targetStart, start, end) {\n      if (!start) start = 0;\n      if (!end && end !== 0) end = this.length;\n      if (targetStart >= target.length) targetStart = target.length;\n      if (!targetStart) targetStart = 0;\n      if (end > 0 && end < start) end = start;\n\n      // Copy 0 bytes; we're done\n      if (end === start) return 0;\n      if (target.length === 0 || this.length === 0) return 0;\n\n      // Fatal error conditions\n      if (targetStart < 0) {\n        throw new RangeError('targetStart out of bounds');\n      }\n      if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds');\n      if (end < 0) throw new RangeError('sourceEnd out of bounds');\n\n      // Are we oob?\n      if (end > this.length) end = this.length;\n      if (target.length - targetStart < end - start) {\n        end = target.length - targetStart + start;\n      }\n\n      var len = end - start;\n      var i;\n\n      if (this === target && start < targetStart && targetStart < end) {\n        // descending copy from end\n        for (i = len - 1; i >= 0; --i) {\n          target[i + targetStart] = this[i + start];\n        }\n      } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n        // ascending copy from start\n        for (i = 0; i < len; ++i) {\n          target[i + targetStart] = this[i + start];\n        }\n      } else {\n        Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);\n      }\n\n      return len;\n    };\n\n    // Usage:\n    //    buffer.fill(number[, offset[, end]])\n    //    buffer.fill(buffer[, offset[, end]])\n    //    buffer.fill(string[, offset[, end]][, encoding])\n    Buffer.prototype.fill = function fill(val, start, end, encoding) {\n      // Handle string cases:\n      if (typeof val === 'string') {\n        if (typeof start === 'string') {\n          encoding = start;\n          start = 0;\n          end = this.length;\n        } else if (typeof end === 'string') {\n          encoding = end;\n          end = this.length;\n        }\n        if (val.length === 1) {\n          var code = val.charCodeAt(0);\n          if (code < 256) {\n            val = code;\n          }\n        }\n        if (encoding !== undefined && typeof encoding !== 'string') {\n          throw new TypeError('encoding must be a string');\n        }\n        if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n          throw new TypeError('Unknown encoding: ' + encoding);\n        }\n      } else if (typeof val === 'number') {\n        val = val & 255;\n      }\n\n      // Invalid ranges are not set to a default, so can range check early.\n      if (start < 0 || this.length < start || this.length < end) {\n        throw new RangeError('Out of range index');\n      }\n\n      if (end <= start) {\n        return this;\n      }\n\n      start = start >>> 0;\n      end = end === undefined ? this.length : end >>> 0;\n\n      if (!val) val = 0;\n\n      var i;\n      if (typeof val === 'number') {\n        for (i = start; i < end; ++i) {\n          this[i] = val;\n        }\n      } else {\n        var bytes = Buffer.isBuffer(val) ? val : utf8ToBytes(new Buffer(val, encoding).toString());\n        var len = bytes.length;\n        for (i = 0; i < end - start; ++i) {\n          this[i + start] = bytes[i % len];\n        }\n      }\n\n      return this;\n    };\n\n    // HELPER FUNCTIONS\n    // ================\n\n    var INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\n\n    function base64clean(str) {\n      // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n      str = stringtrim(str).replace(INVALID_BASE64_RE, ''\n      // Node converts strings with length < 2 to ''\n      );if (str.length < 2) return '';\n      // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n      while (str.length % 4 !== 0) {\n        str = str + '=';\n      }\n      return str;\n    }\n\n    function stringtrim(str) {\n      if (str.trim) return str.trim();\n      return str.replace(/^\\s+|\\s+$/g, '');\n    }\n\n    function toHex(n) {\n      if (n < 16) return '0' + n.toString(16);\n      return n.toString(16);\n    }\n\n    function utf8ToBytes(string, units) {\n      units = units || Infinity;\n      var codePoint;\n      var length = string.length;\n      var leadSurrogate = null;\n      var bytes = [];\n\n      for (var i = 0; i < length; ++i) {\n        codePoint = string.charCodeAt(i\n\n        // is surrogate component\n        );if (codePoint > 0xD7FF && codePoint < 0xE000) {\n          // last char was a lead\n          if (!leadSurrogate) {\n            // no lead yet\n            if (codePoint > 0xDBFF) {\n              // unexpected trail\n              if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n              continue;\n            } else if (i + 1 === length) {\n              // unpaired lead\n              if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n              continue;\n            }\n\n            // valid lead\n            leadSurrogate = codePoint;\n\n            continue;\n          }\n\n          // 2 leads in a row\n          if (codePoint < 0xDC00) {\n            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n            leadSurrogate = codePoint;\n            continue;\n          }\n\n          // valid surrogate pair\n          codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n        } else if (leadSurrogate) {\n          // valid bmp char, but last char was a lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        }\n\n        leadSurrogate = null;\n\n        // encode utf8\n        if (codePoint < 0x80) {\n          if ((units -= 1) < 0) break;\n          bytes.push(codePoint);\n        } else if (codePoint < 0x800) {\n          if ((units -= 2) < 0) break;\n          bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n        } else if (codePoint < 0x10000) {\n          if ((units -= 3) < 0) break;\n          bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n        } else if (codePoint < 0x110000) {\n          if ((units -= 4) < 0) break;\n          bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n        } else {\n          throw new Error('Invalid code point');\n        }\n      }\n\n      return bytes;\n    }\n\n    function asciiToBytes(str) {\n      var byteArray = [];\n      for (var i = 0; i < str.length; ++i) {\n        // Node's code seems to be doing this and not & 0x7F..\n        byteArray.push(str.charCodeAt(i) & 0xFF);\n      }\n      return byteArray;\n    }\n\n    function utf16leToBytes(str, units) {\n      var c, hi, lo;\n      var byteArray = [];\n      for (var i = 0; i < str.length; ++i) {\n        if ((units -= 2) < 0) break;\n\n        c = str.charCodeAt(i);\n        hi = c >> 8;\n        lo = c % 256;\n        byteArray.push(lo);\n        byteArray.push(hi);\n      }\n\n      return byteArray;\n    }\n\n    function base64ToBytes(str) {\n      return base64.toByteArray(base64clean(str));\n    }\n\n    function blitBuffer(src, dst, offset, length) {\n      for (var i = 0; i < length; ++i) {\n        if (i + offset >= dst.length || i >= src.length) break;\n        dst[i + offset] = src[i];\n      }\n      return i;\n    }\n\n    function isnan(val) {\n      return val !== val; // eslint-disable-line no-self-compare\n    }\n    /* WEBPACK VAR INJECTION */\n  }).call(exports, __webpack_require__(3));\n\n  /***/\n},\n/* 2 */\n/***/function (module, exports, __webpack_require__) {\n\n  \"use strict\";\n\n  exports.utils = __webpack_require__(17);\n\n  exports.Bloom = __webpack_require__(15);\n  exports.Solver = __webpack_require__(16);\n  exports.Verifier = __webpack_require__(18);\n\n  /***/\n},\n/* 3 */\n/***/function (module, exports, __webpack_require__) {\n\n  \"use strict\";\n\n  var _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\n    return typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);\n  };\n\n  var g;\n\n  // This works in non-strict mode\n  g = function () {\n    return this;\n  }();\n\n  try {\n    // This works if eval is allowed (see CSP)\n    g = g || Function(\"return this\")() || (1, eval)(\"this\");\n  } catch (e) {\n    // This works if the window reference is available\n    if ((typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) === \"object\") g = window;\n  }\n\n  // g can still be undefined, but nothing to do about it...\n  // We return undefined, instead of nothing here, so it's\n  // easier to handle this case. if(!global) { ...}\n\n  module.exports = g;\n\n  /***/\n},\n/* 4 */\n/***/function (module, exports, __webpack_require__) {\n\n  \"use strict\";\n  /* WEBPACK VAR INJECTION */\n  (function (global) {\n\n    // compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n    // original notice:\n\n    /*!\n     * The buffer module from node.js, for the browser.\n     *\n     * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n     * @license  MIT\n     */\n\n    var _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\n      return typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);\n    } : function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);\n    };\n\n    function compare(a, b) {\n      if (a === b) {\n        return 0;\n      }\n\n      var x = a.length;\n      var y = b.length;\n\n      for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n        if (a[i] !== b[i]) {\n          x = a[i];\n          y = b[i];\n          break;\n        }\n      }\n\n      if (x < y) {\n        return -1;\n      }\n      if (y < x) {\n        return 1;\n      }\n      return 0;\n    }\n    function isBuffer(b) {\n      if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n        return global.Buffer.isBuffer(b);\n      }\n      return !!(b != null && b._isBuffer);\n    }\n\n    // based on node assert, original notice:\n\n    // http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n    //\n    // THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n    //\n    // Originally from narwhal.js (http://narwhaljs.org)\n    // Copyright (c) 2009 Thomas Robinson <280north.com>\n    //\n    // Permission is hereby granted, free of charge, to any person obtaining a copy\n    // of this software and associated documentation files (the 'Software'), to\n    // deal in the Software without restriction, including without limitation the\n    // rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n    // sell copies of the Software, and to permit persons to whom the Software is\n    // furnished to do so, subject to the following conditions:\n    //\n    // The above copyright notice and this permission notice shall be included in\n    // all copies or substantial portions of the Software.\n    //\n    // THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    // AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n    // ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n    // WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n    var util = __webpack_require__(21);\n    var hasOwn = Object.prototype.hasOwnProperty;\n    var pSlice = Array.prototype.slice;\n    var functionsHaveNames = function () {\n      return function foo() {}.name === 'foo';\n    }();\n    function pToString(obj) {\n      return Object.prototype.toString.call(obj);\n    }\n    function isView(arrbuf) {\n      if (isBuffer(arrbuf)) {\n        return false;\n      }\n      if (typeof global.ArrayBuffer !== 'function') {\n        return false;\n      }\n      if (typeof ArrayBuffer.isView === 'function') {\n        return ArrayBuffer.isView(arrbuf);\n      }\n      if (!arrbuf) {\n        return false;\n      }\n      if (arrbuf instanceof DataView) {\n        return true;\n      }\n      if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n        return true;\n      }\n      return false;\n    }\n    // 1. The assert module provides functions that throw\n    // AssertionError's when particular conditions are not met. The\n    // assert module must conform to the following interface.\n\n    var assert = module.exports = ok;\n\n    // 2. The AssertionError is defined in assert.\n    // new assert.AssertionError({ message: message,\n    //                             actual: actual,\n    //                             expected: expected })\n\n    var regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n    // based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\n    function getName(func) {\n      if (!util.isFunction(func)) {\n        return;\n      }\n      if (functionsHaveNames) {\n        return func.name;\n      }\n      var str = func.toString();\n      var match = str.match(regex);\n      return match && match[1];\n    }\n    assert.AssertionError = function AssertionError(options) {\n      this.name = 'AssertionError';\n      this.actual = options.actual;\n      this.expected = options.expected;\n      this.operator = options.operator;\n      if (options.message) {\n        this.message = options.message;\n        this.generatedMessage = false;\n      } else {\n        this.message = getMessage(this);\n        this.generatedMessage = true;\n      }\n      var stackStartFunction = options.stackStartFunction || fail;\n      if (Error.captureStackTrace) {\n        Error.captureStackTrace(this, stackStartFunction);\n      } else {\n        // non v8 browsers so we can have a stacktrace\n        var err = new Error();\n        if (err.stack) {\n          var out = err.stack;\n\n          // try to strip useless frames\n          var fn_name = getName(stackStartFunction);\n          var idx = out.indexOf('\\n' + fn_name);\n          if (idx >= 0) {\n            // once we have located the function frame\n            // we need to strip out everything before it (and its line)\n            var next_line = out.indexOf('\\n', idx + 1);\n            out = out.substring(next_line + 1);\n          }\n\n          this.stack = out;\n        }\n      }\n    };\n\n    // assert.AssertionError instanceof Error\n    util.inherits(assert.AssertionError, Error);\n\n    function truncate(s, n) {\n      if (typeof s === 'string') {\n        return s.length < n ? s : s.slice(0, n);\n      } else {\n        return s;\n      }\n    }\n    function inspect(something) {\n      if (functionsHaveNames || !util.isFunction(something)) {\n        return util.inspect(something);\n      }\n      var rawname = getName(something);\n      var name = rawname ? ': ' + rawname : '';\n      return '[Function' + name + ']';\n    }\n    function getMessage(self) {\n      return truncate(inspect(self.actual), 128) + ' ' + self.operator + ' ' + truncate(inspect(self.expected), 128);\n    }\n\n    // At present only the three keys mentioned above are used and\n    // understood by the spec. Implementations or sub modules can pass\n    // other keys to the AssertionError's constructor - they will be\n    // ignored.\n\n    // 3. All of the following functions must throw an AssertionError\n    // when a corresponding condition is not met, with a message that\n    // may be undefined if not provided.  All assertion methods provide\n    // both the actual and expected values to the assertion error for\n    // display purposes.\n\n    function fail(actual, expected, message, operator, stackStartFunction) {\n      throw new assert.AssertionError({\n        message: message,\n        actual: actual,\n        expected: expected,\n        operator: operator,\n        stackStartFunction: stackStartFunction\n      });\n    }\n\n    // EXTENSION! allows for well behaved errors defined elsewhere.\n    assert.fail = fail;\n\n    // 4. Pure assertion tests whether a value is truthy, as determined\n    // by !!guard.\n    // assert.ok(guard, message_opt);\n    // This statement is equivalent to assert.equal(true, !!guard,\n    // message_opt);. To test strictly for the value true, use\n    // assert.strictEqual(true, guard, message_opt);.\n\n    function ok(value, message) {\n      if (!value) fail(value, true, message, '==', assert.ok);\n    }\n    assert.ok = ok;\n\n    // 5. The equality assertion tests shallow, coercive equality with\n    // ==.\n    // assert.equal(actual, expected, message_opt);\n\n    assert.equal = function equal(actual, expected, message) {\n      if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n    };\n\n    // 6. The non-equality assertion tests for whether two objects are not equal\n    // with != assert.notEqual(actual, expected, message_opt);\n\n    assert.notEqual = function notEqual(actual, expected, message) {\n      if (actual == expected) {\n        fail(actual, expected, message, '!=', assert.notEqual);\n      }\n    };\n\n    // 7. The equivalence assertion tests a deep equality relation.\n    // assert.deepEqual(actual, expected, message_opt);\n\n    assert.deepEqual = function deepEqual(actual, expected, message) {\n      if (!_deepEqual(actual, expected, false)) {\n        fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n      }\n    };\n\n    assert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n      if (!_deepEqual(actual, expected, true)) {\n        fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n      }\n    };\n\n    function _deepEqual(actual, expected, strict, memos) {\n      // 7.1. All identical values are equivalent, as determined by ===.\n      if (actual === expected) {\n        return true;\n      } else if (isBuffer(actual) && isBuffer(expected)) {\n        return compare(actual, expected) === 0;\n\n        // 7.2. If the expected value is a Date object, the actual value is\n        // equivalent if it is also a Date object that refers to the same time.\n      } else if (util.isDate(actual) && util.isDate(expected)) {\n        return actual.getTime() === expected.getTime();\n\n        // 7.3 If the expected value is a RegExp object, the actual value is\n        // equivalent if it is also a RegExp object with the same source and\n        // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n      } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n        return actual.source === expected.source && actual.global === expected.global && actual.multiline === expected.multiline && actual.lastIndex === expected.lastIndex && actual.ignoreCase === expected.ignoreCase;\n\n        // 7.4. Other pairs that do not both pass typeof value == 'object',\n        // equivalence is determined by ==.\n      } else if ((actual === null || (typeof actual === 'undefined' ? 'undefined' : _typeof(actual)) !== 'object') && (expected === null || (typeof expected === 'undefined' ? 'undefined' : _typeof(expected)) !== 'object')) {\n        return strict ? actual === expected : actual == expected;\n\n        // If both values are instances of typed arrays, wrap their underlying\n        // ArrayBuffers in a Buffer each to increase performance\n        // This optimization requires the arrays to have the same type as checked by\n        // Object.prototype.toString (aka pToString). Never perform binary\n        // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n        // bit patterns are not identical.\n      } else if (isView(actual) && isView(expected) && pToString(actual) === pToString(expected) && !(actual instanceof Float32Array || actual instanceof Float64Array)) {\n        return compare(new Uint8Array(actual.buffer), new Uint8Array(expected.buffer)) === 0;\n\n        // 7.5 For all other Object pairs, including Array objects, equivalence is\n        // determined by having the same number of owned properties (as verified\n        // with Object.prototype.hasOwnProperty.call), the same set of keys\n        // (although not necessarily the same order), equivalent values for every\n        // corresponding key, and an identical 'prototype' property. Note: this\n        // accounts for both named and indexed properties on Arrays.\n      } else if (isBuffer(actual) !== isBuffer(expected)) {\n        return false;\n      } else {\n        memos = memos || { actual: [], expected: [] };\n\n        var actualIndex = memos.actual.indexOf(actual);\n        if (actualIndex !== -1) {\n          if (actualIndex === memos.expected.indexOf(expected)) {\n            return true;\n          }\n        }\n\n        memos.actual.push(actual);\n        memos.expected.push(expected);\n\n        return objEquiv(actual, expected, strict, memos);\n      }\n    }\n\n    function isArguments(object) {\n      return Object.prototype.toString.call(object) == '[object Arguments]';\n    }\n\n    function objEquiv(a, b, strict, actualVisitedObjects) {\n      if (a === null || a === undefined || b === null || b === undefined) return false;\n      // if one is a primitive, the other must be same\n      if (util.isPrimitive(a) || util.isPrimitive(b)) return a === b;\n      if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b)) return false;\n      var aIsArgs = isArguments(a);\n      var bIsArgs = isArguments(b);\n      if (aIsArgs && !bIsArgs || !aIsArgs && bIsArgs) return false;\n      if (aIsArgs) {\n        a = pSlice.call(a);\n        b = pSlice.call(b);\n        return _deepEqual(a, b, strict);\n      }\n      var ka = objectKeys(a);\n      var kb = objectKeys(b);\n      var key, i;\n      // having the same number of owned properties (keys incorporates\n      // hasOwnProperty)\n      if (ka.length !== kb.length) return false;\n      //the same set of keys (although not necessarily the same order),\n      ka.sort();\n      kb.sort();\n      //~~~cheap key test\n      for (i = ka.length - 1; i >= 0; i--) {\n        if (ka[i] !== kb[i]) return false;\n      }\n      //equivalent values for every corresponding key, and\n      //~~~possibly expensive deep test\n      for (i = ka.length - 1; i >= 0; i--) {\n        key = ka[i];\n        if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects)) return false;\n      }\n      return true;\n    }\n\n    // 8. The non-equivalence assertion tests for any deep inequality.\n    // assert.notDeepEqual(actual, expected, message_opt);\n\n    assert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n      if (_deepEqual(actual, expected, false)) {\n        fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n      }\n    };\n\n    assert.notDeepStrictEqual = notDeepStrictEqual;\n    function notDeepStrictEqual(actual, expected, message) {\n      if (_deepEqual(actual, expected, true)) {\n        fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n      }\n    }\n\n    // 9. The strict equality assertion tests strict equality, as determined by ===.\n    // assert.strictEqual(actual, expected, message_opt);\n\n    assert.strictEqual = function strictEqual(actual, expected, message) {\n      if (actual !== expected) {\n        fail(actual, expected, message, '===', assert.strictEqual);\n      }\n    };\n\n    // 10. The strict non-equality assertion tests for strict inequality, as\n    // determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\n    assert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n      if (actual === expected) {\n        fail(actual, expected, message, '!==', assert.notStrictEqual);\n      }\n    };\n\n    function expectedException(actual, expected) {\n      if (!actual || !expected) {\n        return false;\n      }\n\n      if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n        return expected.test(actual);\n      }\n\n      try {\n        if (actual instanceof expected) {\n          return true;\n        }\n      } catch (e) {\n        // Ignore.  The instanceof check doesn't work for arrow functions.\n      }\n\n      if (Error.isPrototypeOf(expected)) {\n        return false;\n      }\n\n      return expected.call({}, actual) === true;\n    }\n\n    function _tryBlock(block) {\n      var error;\n      try {\n        block();\n      } catch (e) {\n        error = e;\n      }\n      return error;\n    }\n\n    function _throws(shouldThrow, block, expected, message) {\n      var actual;\n\n      if (typeof block !== 'function') {\n        throw new TypeError('\"block\" argument must be a function');\n      }\n\n      if (typeof expected === 'string') {\n        message = expected;\n        expected = null;\n      }\n\n      actual = _tryBlock(block);\n\n      message = (expected && expected.name ? ' (' + expected.name + ').' : '.') + (message ? ' ' + message : '.');\n\n      if (shouldThrow && !actual) {\n        fail(actual, expected, 'Missing expected exception' + message);\n      }\n\n      var userProvidedMessage = typeof message === 'string';\n      var isUnwantedException = !shouldThrow && util.isError(actual);\n      var isUnexpectedException = !shouldThrow && actual && !expected;\n\n      if (isUnwantedException && userProvidedMessage && expectedException(actual, expected) || isUnexpectedException) {\n        fail(actual, expected, 'Got unwanted exception' + message);\n      }\n\n      if (shouldThrow && actual && expected && !expectedException(actual, expected) || !shouldThrow && actual) {\n        throw actual;\n      }\n    }\n\n    // 11. Expected to throw an error:\n    // assert.throws(block, Error_opt, message_opt);\n\n    assert.throws = function (block, /*optional*/error, /*optional*/message) {\n      _throws(true, block, error, message);\n    };\n\n    // EXTENSION! This is annoying to write outside this module.\n    assert.doesNotThrow = function (block, /*optional*/error, /*optional*/message) {\n      _throws(false, block, error, message);\n    };\n\n    assert.ifError = function (err) {\n      if (err) throw err;\n    };\n\n    var objectKeys = Object.keys || function (obj) {\n      var keys = [];\n      for (var key in obj) {\n        if (hasOwn.call(obj, key)) keys.push(key);\n      }\n      return keys;\n    };\n    /* WEBPACK VAR INJECTION */\n  }).call(exports, __webpack_require__(3));\n\n  /***/\n},\n/* 5 */\n/***/function (module, exports, __webpack_require__) {\n\n  \"use strict\";\n\n  exports.byteLength = byteLength;\n  exports.toByteArray = toByteArray;\n  exports.fromByteArray = fromByteArray;\n\n  var lookup = [];\n  var revLookup = [];\n  var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\n\n  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n  for (var i = 0, len = code.length; i < len; ++i) {\n    lookup[i] = code[i];\n    revLookup[code.charCodeAt(i)] = i;\n  }\n\n  revLookup['-'.charCodeAt(0)] = 62;\n  revLookup['_'.charCodeAt(0)] = 63;\n\n  function placeHoldersCount(b64) {\n    var len = b64.length;\n    if (len % 4 > 0) {\n      throw new Error('Invalid string. Length must be a multiple of 4');\n    }\n\n    // the number of equal signs (place holders)\n    // if there are two placeholders, than the two characters before it\n    // represent one byte\n    // if there is only one, then the three characters before it represent 2 bytes\n    // this is just a cheap hack to not do indexOf twice\n    return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0;\n  }\n\n  function byteLength(b64) {\n    // base64 is 4/3 + up to two characters of the original data\n    return b64.length * 3 / 4 - placeHoldersCount(b64);\n  }\n\n  function toByteArray(b64) {\n    var i, j, l, tmp, placeHolders, arr;\n    var len = b64.length;\n    placeHolders = placeHoldersCount(b64);\n\n    arr = new Arr(len * 3 / 4 - placeHolders);\n\n    // if there are placeholders, only get up to the last complete 4 chars\n    l = placeHolders > 0 ? len - 4 : len;\n\n    var L = 0;\n\n    for (i = 0, j = 0; i < l; i += 4, j += 3) {\n      tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n      arr[L++] = tmp >> 16 & 0xFF;\n      arr[L++] = tmp >> 8 & 0xFF;\n      arr[L++] = tmp & 0xFF;\n    }\n\n    if (placeHolders === 2) {\n      tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n      arr[L++] = tmp & 0xFF;\n    } else if (placeHolders === 1) {\n      tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n      arr[L++] = tmp >> 8 & 0xFF;\n      arr[L++] = tmp & 0xFF;\n    }\n\n    return arr;\n  }\n\n  function tripletToBase64(num) {\n    return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n  }\n\n  function encodeChunk(uint8, start, end) {\n    var tmp;\n    var output = [];\n    for (var i = start; i < end; i += 3) {\n      tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + uint8[i + 2];\n      output.push(tripletToBase64(tmp));\n    }\n    return output.join('');\n  }\n\n  function fromByteArray(uint8) {\n    var tmp;\n    var len = uint8.length;\n    var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n    var output = '';\n    var parts = [];\n    var maxChunkLength = 16383; // must be multiple of 3\n\n    // go through the array every three bytes, we'll deal with trailing stuff later\n    for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n      parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n    }\n\n    // pad the end with zeros, but make sure to not forget the extra bytes\n    if (extraBytes === 1) {\n      tmp = uint8[len - 1];\n      output += lookup[tmp >> 2];\n      output += lookup[tmp << 4 & 0x3F];\n      output += '==';\n    } else if (extraBytes === 2) {\n      tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n      output += lookup[tmp >> 10];\n      output += lookup[tmp >> 4 & 0x3F];\n      output += lookup[tmp << 2 & 0x3F];\n      output += '=';\n    }\n\n    parts.push(output);\n\n    return parts.join('');\n  }\n\n  /***/\n},\n/* 6 */\n/***/function (module, exports, __webpack_require__) {\n\n  \"use strict\";\n\n  var hash = __webpack_require__(0);\n  var utils = hash.utils;\n  var assert = utils.assert;\n\n  function BlockHash() {\n    this.pending = null;\n    this.pendingTotal = 0;\n    this.blockSize = this.constructor.blockSize;\n    this.outSize = this.constructor.outSize;\n    this.hmacStrength = this.constructor.hmacStrength;\n    this.padLength = this.constructor.padLength / 8;\n    this.endian = 'big';\n\n    this._delta8 = this.blockSize / 8;\n    this._delta32 = this.blockSize / 32;\n  }\n  exports.BlockHash = BlockHash;\n\n  BlockHash.prototype.update = function update(msg, enc) {\n    // Convert message to array, pad it, and join into 32bit blocks\n    msg = utils.toArray(msg, enc);\n    if (!this.pending) this.pending = msg;else this.pending = this.pending.concat(msg);\n    this.pendingTotal += msg.length;\n\n    // Enough data, try updating\n    if (this.pending.length >= this._delta8) {\n      msg = this.pending;\n\n      // Process pending data in blocks\n      var r = msg.length % this._delta8;\n      this.pending = msg.slice(msg.length - r, msg.length);\n      if (this.pending.length === 0) this.pending = null;\n\n      msg = utils.join32(msg, 0, msg.length - r, this.endian);\n      for (var i = 0; i < msg.length; i += this._delta32) {\n        this._update(msg, i, i + this._delta32);\n      }\n    }\n\n    return this;\n  };\n\n  BlockHash.prototype.digest = function digest(enc) {\n    this.update(this._pad());\n    assert(this.pending === null);\n\n    return this._digest(enc);\n  };\n\n  BlockHash.prototype._pad = function pad() {\n    var len = this.pendingTotal;\n    var bytes = this._delta8;\n    var k = bytes - (len + this.padLength) % bytes;\n    var res = new Array(k + this.padLength);\n    res[0] = 0x80;\n    for (var i = 1; i < k; i++) {\n      res[i] = 0;\n    } // Append length\n    len <<= 3;\n    if (this.endian === 'big') {\n      for (var t = 8; t < this.padLength; t++) {\n        res[i++] = 0;\n      }res[i++] = 0;\n      res[i++] = 0;\n      res[i++] = 0;\n      res[i++] = 0;\n      res[i++] = len >>> 24 & 0xff;\n      res[i++] = len >>> 16 & 0xff;\n      res[i++] = len >>> 8 & 0xff;\n      res[i++] = len & 0xff;\n    } else {\n      res[i++] = len & 0xff;\n      res[i++] = len >>> 8 & 0xff;\n      res[i++] = len >>> 16 & 0xff;\n      res[i++] = len >>> 24 & 0xff;\n      res[i++] = 0;\n      res[i++] = 0;\n      res[i++] = 0;\n      res[i++] = 0;\n\n      for (var t = 8; t < this.padLength; t++) {\n        res[i++] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  /***/\n},\n/* 7 */\n/***/function (module, exports, __webpack_require__) {\n\n  \"use strict\";\n\n  var hmac = exports;\n\n  var hash = __webpack_require__(0);\n  var utils = hash.utils;\n  var assert = utils.assert;\n\n  function Hmac(hash, key, enc) {\n    if (!(this instanceof Hmac)) return new Hmac(hash, key, enc);\n    this.Hash = hash;\n    this.blockSize = hash.blockSize / 8;\n    this.outSize = hash.outSize / 8;\n    this.inner = null;\n    this.outer = null;\n\n    this._init(utils.toArray(key, enc));\n  }\n  module.exports = Hmac;\n\n  Hmac.prototype._init = function init(key) {\n    // Shorten key, if needed\n    if (key.length > this.blockSize) key = new this.Hash().update(key).digest();\n    assert(key.length <= this.blockSize);\n\n    // Add padding to key\n    for (var i = key.length; i < this.blockSize; i++) {\n      key.push(0);\n    }for (var i = 0; i < key.length; i++) {\n      key[i] ^= 0x36;\n    }this.inner = new this.Hash().update(key);\n\n    // 0x36 ^ 0x5c = 0x6a\n    for (var i = 0; i < key.length; i++) {\n      key[i] ^= 0x6a;\n    }this.outer = new this.Hash().update(key);\n  };\n\n  Hmac.prototype.update = function update(msg, enc) {\n    this.inner.update(msg, enc);\n    return this;\n  };\n\n  Hmac.prototype.digest = function digest(enc) {\n    this.outer.update(this.inner.digest());\n    return this.outer.digest(enc);\n  };\n\n  /***/\n},\n/* 8 */\n/***/function (module, exports, __webpack_require__) {\n\n  \"use strict\";\n\n  var hash = __webpack_require__(0);\n  var utils = hash.utils;\n\n  var rotl32 = utils.rotl32;\n  var sum32 = utils.sum32;\n  var sum32_3 = utils.sum32_3;\n  var sum32_4 = utils.sum32_4;\n  var BlockHash = hash.common.BlockHash;\n\n  function RIPEMD160() {\n    if (!(this instanceof RIPEMD160)) return new RIPEMD160();\n\n    BlockHash.call(this);\n\n    this.h = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n    this.endian = 'little';\n  }\n  utils.inherits(RIPEMD160, BlockHash);\n  exports.ripemd160 = RIPEMD160;\n\n  RIPEMD160.blockSize = 512;\n  RIPEMD160.outSize = 160;\n  RIPEMD160.hmacStrength = 192;\n  RIPEMD160.padLength = 64;\n\n  RIPEMD160.prototype._update = function update(msg, start) {\n    var A = this.h[0];\n    var B = this.h[1];\n    var C = this.h[2];\n    var D = this.h[3];\n    var E = this.h[4];\n    var Ah = A;\n    var Bh = B;\n    var Ch = C;\n    var Dh = D;\n    var Eh = E;\n    for (var j = 0; j < 80; j++) {\n      var T = sum32(rotl32(sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)), s[j]), E);\n      A = E;\n      E = D;\n      D = rotl32(C, 10);\n      C = B;\n      B = T;\n      T = sum32(rotl32(sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)), sh[j]), Eh);\n      Ah = Eh;\n      Eh = Dh;\n      Dh = rotl32(Ch, 10);\n      Ch = Bh;\n      Bh = T;\n    }\n    T = sum32_3(this.h[1], C, Dh);\n    this.h[1] = sum32_3(this.h[2], D, Eh);\n    this.h[2] = sum32_3(this.h[3], E, Ah);\n    this.h[3] = sum32_3(this.h[4], A, Bh);\n    this.h[4] = sum32_3(this.h[0], B, Ch);\n    this.h[0] = T;\n  };\n\n  RIPEMD160.prototype._digest = function digest(enc) {\n    if (enc === 'hex') return utils.toHex32(this.h, 'little');else return utils.split32(this.h, 'little');\n  };\n\n  function f(j, x, y, z) {\n    if (j <= 15) return x ^ y ^ z;else if (j <= 31) return x & y | ~x & z;else if (j <= 47) return (x | ~y) ^ z;else if (j <= 63) return x & z | y & ~z;else return x ^ (y | ~z);\n  }\n\n  function K(j) {\n    if (j <= 15) return 0x00000000;else if (j <= 31) return 0x5a827999;else if (j <= 47) return 0x6ed9eba1;else if (j <= 63) return 0x8f1bbcdc;else return 0xa953fd4e;\n  }\n\n  function Kh(j) {\n    if (j <= 15) return 0x50a28be6;else if (j <= 31) return 0x5c4dd124;else if (j <= 47) return 0x6d703ef3;else if (j <= 63) return 0x7a6d76e9;else return 0x00000000;\n  }\n\n  var r = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13];\n\n  var rh = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11];\n\n  var s = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6];\n\n  var sh = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11];\n\n  /***/\n},\n/* 9 */\n/***/function (module, exports, __webpack_require__) {\n\n  \"use strict\";\n\n  var hash = __webpack_require__(0);\n  var utils = hash.utils;\n  var assert = utils.assert;\n\n  var rotr32 = utils.rotr32;\n  var rotl32 = utils.rotl32;\n  var sum32 = utils.sum32;\n  var sum32_4 = utils.sum32_4;\n  var sum32_5 = utils.sum32_5;\n  var rotr64_hi = utils.rotr64_hi;\n  var rotr64_lo = utils.rotr64_lo;\n  var shr64_hi = utils.shr64_hi;\n  var shr64_lo = utils.shr64_lo;\n  var sum64 = utils.sum64;\n  var sum64_hi = utils.sum64_hi;\n  var sum64_lo = utils.sum64_lo;\n  var sum64_4_hi = utils.sum64_4_hi;\n  var sum64_4_lo = utils.sum64_4_lo;\n  var sum64_5_hi = utils.sum64_5_hi;\n  var sum64_5_lo = utils.sum64_5_lo;\n  var BlockHash = hash.common.BlockHash;\n\n  var sha256_K = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n\n  var sha512_K = [0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd, 0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc, 0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019, 0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118, 0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe, 0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2, 0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1, 0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694, 0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3, 0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65, 0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483, 0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5, 0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210, 0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4, 0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725, 0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70, 0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926, 0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df, 0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8, 0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b, 0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001, 0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30, 0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910, 0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8, 0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53, 0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8, 0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb, 0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3, 0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60, 0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec, 0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9, 0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b, 0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207, 0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178, 0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6, 0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b, 0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493, 0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c, 0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a, 0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817];\n\n  var sha1_K = [0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xCA62C1D6];\n\n  function SHA256() {\n    if (!(this instanceof SHA256)) return new SHA256();\n\n    BlockHash.call(this);\n    this.h = [0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19];\n    this.k = sha256_K;\n    this.W = new Array(64);\n  }\n  utils.inherits(SHA256, BlockHash);\n  exports.sha256 = SHA256;\n\n  SHA256.blockSize = 512;\n  SHA256.outSize = 256;\n  SHA256.hmacStrength = 192;\n  SHA256.padLength = 64;\n\n  SHA256.prototype._update = function _update(msg, start) {\n    var W = this.W;\n\n    for (var i = 0; i < 16; i++) {\n      W[i] = msg[start + i];\n    }for (; i < W.length; i++) {\n      W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n    }var a = this.h[0];\n    var b = this.h[1];\n    var c = this.h[2];\n    var d = this.h[3];\n    var e = this.h[4];\n    var f = this.h[5];\n    var g = this.h[6];\n    var h = this.h[7];\n\n    assert(this.k.length === W.length);\n    for (var i = 0; i < W.length; i++) {\n      var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n      var T2 = sum32(s0_256(a), maj32(a, b, c));\n      h = g;\n      g = f;\n      f = e;\n      e = sum32(d, T1);\n      d = c;\n      c = b;\n      b = a;\n      a = sum32(T1, T2);\n    }\n\n    this.h[0] = sum32(this.h[0], a);\n    this.h[1] = sum32(this.h[1], b);\n    this.h[2] = sum32(this.h[2], c);\n    this.h[3] = sum32(this.h[3], d);\n    this.h[4] = sum32(this.h[4], e);\n    this.h[5] = sum32(this.h[5], f);\n    this.h[6] = sum32(this.h[6], g);\n    this.h[7] = sum32(this.h[7], h);\n  };\n\n  SHA256.prototype._digest = function digest(enc) {\n    if (enc === 'hex') return utils.toHex32(this.h, 'big');else return utils.split32(this.h, 'big');\n  };\n\n  function SHA224() {\n    if (!(this instanceof SHA224)) return new SHA224();\n\n    SHA256.call(this);\n    this.h = [0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939, 0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4];\n  }\n  utils.inherits(SHA224, SHA256);\n  exports.sha224 = SHA224;\n\n  SHA224.blockSize = 512;\n  SHA224.outSize = 224;\n  SHA224.hmacStrength = 192;\n  SHA224.padLength = 64;\n\n  SHA224.prototype._digest = function digest(enc) {\n    // Just truncate output\n    if (enc === 'hex') return utils.toHex32(this.h.slice(0, 7), 'big');else return utils.split32(this.h.slice(0, 7), 'big');\n  };\n\n  function SHA512() {\n    if (!(this instanceof SHA512)) return new SHA512();\n\n    BlockHash.call(this);\n    this.h = [0x6a09e667, 0xf3bcc908, 0xbb67ae85, 0x84caa73b, 0x3c6ef372, 0xfe94f82b, 0xa54ff53a, 0x5f1d36f1, 0x510e527f, 0xade682d1, 0x9b05688c, 0x2b3e6c1f, 0x1f83d9ab, 0xfb41bd6b, 0x5be0cd19, 0x137e2179];\n    this.k = sha512_K;\n    this.W = new Array(160);\n  }\n  utils.inherits(SHA512, BlockHash);\n  exports.sha512 = SHA512;\n\n  SHA512.blockSize = 1024;\n  SHA512.outSize = 512;\n  SHA512.hmacStrength = 192;\n  SHA512.padLength = 128;\n\n  SHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n    var W = this.W;\n\n    // 32 x 32bit words\n    for (var i = 0; i < 32; i++) {\n      W[i] = msg[start + i];\n    }for (; i < W.length; i += 2) {\n      var c0_hi = g1_512_hi(W[i - 4], W[i - 3]); // i - 2\n      var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n      var c1_hi = W[i - 14]; // i - 7\n      var c1_lo = W[i - 13];\n      var c2_hi = g0_512_hi(W[i - 30], W[i - 29]); // i - 15\n      var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n      var c3_hi = W[i - 32]; // i - 16\n      var c3_lo = W[i - 31];\n\n      W[i] = sum64_4_hi(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo);\n      W[i + 1] = sum64_4_lo(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo);\n    }\n  };\n\n  SHA512.prototype._update = function _update(msg, start) {\n    this._prepareBlock(msg, start);\n\n    var W = this.W;\n\n    var ah = this.h[0];\n    var al = this.h[1];\n    var bh = this.h[2];\n    var bl = this.h[3];\n    var ch = this.h[4];\n    var cl = this.h[5];\n    var dh = this.h[6];\n    var dl = this.h[7];\n    var eh = this.h[8];\n    var el = this.h[9];\n    var fh = this.h[10];\n    var fl = this.h[11];\n    var gh = this.h[12];\n    var gl = this.h[13];\n    var hh = this.h[14];\n    var hl = this.h[15];\n\n    assert(this.k.length === W.length);\n    for (var i = 0; i < W.length; i += 2) {\n      var c0_hi = hh;\n      var c0_lo = hl;\n      var c1_hi = s1_512_hi(eh, el);\n      var c1_lo = s1_512_lo(eh, el);\n      var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n      var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n      var c3_hi = this.k[i];\n      var c3_lo = this.k[i + 1];\n      var c4_hi = W[i];\n      var c4_lo = W[i + 1];\n\n      var T1_hi = sum64_5_hi(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo, c4_hi, c4_lo);\n      var T1_lo = sum64_5_lo(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo, c4_hi, c4_lo);\n\n      var c0_hi = s0_512_hi(ah, al);\n      var c0_lo = s0_512_lo(ah, al);\n      var c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n      var c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n      var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n      var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n      hh = gh;\n      hl = gl;\n\n      gh = fh;\n      gl = fl;\n\n      fh = eh;\n      fl = el;\n\n      eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n      el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n      dh = ch;\n      dl = cl;\n\n      ch = bh;\n      cl = bl;\n\n      bh = ah;\n      bl = al;\n\n      ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n      al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n    }\n\n    sum64(this.h, 0, ah, al);\n    sum64(this.h, 2, bh, bl);\n    sum64(this.h, 4, ch, cl);\n    sum64(this.h, 6, dh, dl);\n    sum64(this.h, 8, eh, el);\n    sum64(this.h, 10, fh, fl);\n    sum64(this.h, 12, gh, gl);\n    sum64(this.h, 14, hh, hl);\n  };\n\n  SHA512.prototype._digest = function digest(enc) {\n    if (enc === 'hex') return utils.toHex32(this.h, 'big');else return utils.split32(this.h, 'big');\n  };\n\n  function SHA384() {\n    if (!(this instanceof SHA384)) return new SHA384();\n\n    SHA512.call(this);\n    this.h = [0xcbbb9d5d, 0xc1059ed8, 0x629a292a, 0x367cd507, 0x9159015a, 0x3070dd17, 0x152fecd8, 0xf70e5939, 0x67332667, 0xffc00b31, 0x8eb44a87, 0x68581511, 0xdb0c2e0d, 0x64f98fa7, 0x47b5481d, 0xbefa4fa4];\n  }\n  utils.inherits(SHA384, SHA512);\n  exports.sha384 = SHA384;\n\n  SHA384.blockSize = 1024;\n  SHA384.outSize = 384;\n  SHA384.hmacStrength = 192;\n  SHA384.padLength = 128;\n\n  SHA384.prototype._digest = function digest(enc) {\n    if (enc === 'hex') return utils.toHex32(this.h.slice(0, 12), 'big');else return utils.split32(this.h.slice(0, 12), 'big');\n  };\n\n  function SHA1() {\n    if (!(this instanceof SHA1)) return new SHA1();\n\n    BlockHash.call(this);\n    this.h = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n    this.W = new Array(80);\n  }\n\n  utils.inherits(SHA1, BlockHash);\n  exports.sha1 = SHA1;\n\n  SHA1.blockSize = 512;\n  SHA1.outSize = 160;\n  SHA1.hmacStrength = 80;\n  SHA1.padLength = 64;\n\n  SHA1.prototype._update = function _update(msg, start) {\n    var W = this.W;\n\n    for (var i = 0; i < 16; i++) {\n      W[i] = msg[start + i];\n    }for (; i < W.length; i++) {\n      W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n    }var a = this.h[0];\n    var b = this.h[1];\n    var c = this.h[2];\n    var d = this.h[3];\n    var e = this.h[4];\n\n    for (var i = 0; i < W.length; i++) {\n      var s = ~~(i / 20);\n      var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n      e = d;\n      d = c;\n      c = rotl32(b, 30);\n      b = a;\n      a = t;\n    }\n\n    this.h[0] = sum32(this.h[0], a);\n    this.h[1] = sum32(this.h[1], b);\n    this.h[2] = sum32(this.h[2], c);\n    this.h[3] = sum32(this.h[3], d);\n    this.h[4] = sum32(this.h[4], e);\n  };\n\n  SHA1.prototype._digest = function digest(enc) {\n    if (enc === 'hex') return utils.toHex32(this.h, 'big');else return utils.split32(this.h, 'big');\n  };\n\n  function ch32(x, y, z) {\n    return x & y ^ ~x & z;\n  }\n\n  function maj32(x, y, z) {\n    return x & y ^ x & z ^ y & z;\n  }\n\n  function p32(x, y, z) {\n    return x ^ y ^ z;\n  }\n\n  function s0_256(x) {\n    return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n  }\n\n  function s1_256(x) {\n    return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n  }\n\n  function g0_256(x) {\n    return rotr32(x, 7) ^ rotr32(x, 18) ^ x >>> 3;\n  }\n\n  function g1_256(x) {\n    return rotr32(x, 17) ^ rotr32(x, 19) ^ x >>> 10;\n  }\n\n  function ft_1(s, x, y, z) {\n    if (s === 0) return ch32(x, y, z);\n    if (s === 1 || s === 3) return p32(x, y, z);\n    if (s === 2) return maj32(x, y, z);\n  }\n\n  function ch64_hi(xh, xl, yh, yl, zh, zl) {\n    var r = xh & yh ^ ~xh & zh;\n    if (r < 0) r += 0x100000000;\n    return r;\n  }\n\n  function ch64_lo(xh, xl, yh, yl, zh, zl) {\n    var r = xl & yl ^ ~xl & zl;\n    if (r < 0) r += 0x100000000;\n    return r;\n  }\n\n  function maj64_hi(xh, xl, yh, yl, zh, zl) {\n    var r = xh & yh ^ xh & zh ^ yh & zh;\n    if (r < 0) r += 0x100000000;\n    return r;\n  }\n\n  function maj64_lo(xh, xl, yh, yl, zh, zl) {\n    var r = xl & yl ^ xl & zl ^ yl & zl;\n    if (r < 0) r += 0x100000000;\n    return r;\n  }\n\n  function s0_512_hi(xh, xl) {\n    var c0_hi = rotr64_hi(xh, xl, 28);\n    var c1_hi = rotr64_hi(xl, xh, 2); // 34\n    var c2_hi = rotr64_hi(xl, xh, 7); // 39\n\n    var r = c0_hi ^ c1_hi ^ c2_hi;\n    if (r < 0) r += 0x100000000;\n    return r;\n  }\n\n  function s0_512_lo(xh, xl) {\n    var c0_lo = rotr64_lo(xh, xl, 28);\n    var c1_lo = rotr64_lo(xl, xh, 2); // 34\n    var c2_lo = rotr64_lo(xl, xh, 7); // 39\n\n    var r = c0_lo ^ c1_lo ^ c2_lo;\n    if (r < 0) r += 0x100000000;\n    return r;\n  }\n\n  function s1_512_hi(xh, xl) {\n    var c0_hi = rotr64_hi(xh, xl, 14);\n    var c1_hi = rotr64_hi(xh, xl, 18);\n    var c2_hi = rotr64_hi(xl, xh, 9); // 41\n\n    var r = c0_hi ^ c1_hi ^ c2_hi;\n    if (r < 0) r += 0x100000000;\n    return r;\n  }\n\n  function s1_512_lo(xh, xl) {\n    var c0_lo = rotr64_lo(xh, xl, 14);\n    var c1_lo = rotr64_lo(xh, xl, 18);\n    var c2_lo = rotr64_lo(xl, xh, 9); // 41\n\n    var r = c0_lo ^ c1_lo ^ c2_lo;\n    if (r < 0) r += 0x100000000;\n    return r;\n  }\n\n  function g0_512_hi(xh, xl) {\n    var c0_hi = rotr64_hi(xh, xl, 1);\n    var c1_hi = rotr64_hi(xh, xl, 8);\n    var c2_hi = shr64_hi(xh, xl, 7);\n\n    var r = c0_hi ^ c1_hi ^ c2_hi;\n    if (r < 0) r += 0x100000000;\n    return r;\n  }\n\n  function g0_512_lo(xh, xl) {\n    var c0_lo = rotr64_lo(xh, xl, 1);\n    var c1_lo = rotr64_lo(xh, xl, 8);\n    var c2_lo = shr64_lo(xh, xl, 7);\n\n    var r = c0_lo ^ c1_lo ^ c2_lo;\n    if (r < 0) r += 0x100000000;\n    return r;\n  }\n\n  function g1_512_hi(xh, xl) {\n    var c0_hi = rotr64_hi(xh, xl, 19);\n    var c1_hi = rotr64_hi(xl, xh, 29); // 61\n    var c2_hi = shr64_hi(xh, xl, 6);\n\n    var r = c0_hi ^ c1_hi ^ c2_hi;\n    if (r < 0) r += 0x100000000;\n    return r;\n  }\n\n  function g1_512_lo(xh, xl) {\n    var c0_lo = rotr64_lo(xh, xl, 19);\n    var c1_lo = rotr64_lo(xl, xh, 29); // 61\n    var c2_lo = shr64_lo(xh, xl, 6);\n\n    var r = c0_lo ^ c1_lo ^ c2_lo;\n    if (r < 0) r += 0x100000000;\n    return r;\n  }\n\n  /***/\n},\n/* 10 */\n/***/function (module, exports, __webpack_require__) {\n\n  \"use strict\";\n\n  var utils = exports;\n  var inherits = __webpack_require__(12);\n\n  function toArray(msg, enc) {\n    if (Array.isArray(msg)) return msg.slice();\n    if (!msg) return [];\n    var res = [];\n    if (typeof msg === 'string') {\n      if (!enc) {\n        for (var i = 0; i < msg.length; i++) {\n          var c = msg.charCodeAt(i);\n          var hi = c >> 8;\n          var lo = c & 0xff;\n          if (hi) res.push(hi, lo);else res.push(lo);\n        }\n      } else if (enc === 'hex') {\n        msg = msg.replace(/[^a-z0-9]+/ig, '');\n        if (msg.length % 2 !== 0) msg = '0' + msg;\n        for (var i = 0; i < msg.length; i += 2) {\n          res.push(parseInt(msg[i] + msg[i + 1], 16));\n        }\n      }\n    } else {\n      for (var i = 0; i < msg.length; i++) {\n        res[i] = msg[i] | 0;\n      }\n    }\n    return res;\n  }\n  utils.toArray = toArray;\n\n  function toHex(msg) {\n    var res = '';\n    for (var i = 0; i < msg.length; i++) {\n      res += zero2(msg[i].toString(16));\n    }return res;\n  }\n  utils.toHex = toHex;\n\n  function htonl(w) {\n    var res = w >>> 24 | w >>> 8 & 0xff00 | w << 8 & 0xff0000 | (w & 0xff) << 24;\n    return res >>> 0;\n  }\n  utils.htonl = htonl;\n\n  function toHex32(msg, endian) {\n    var res = '';\n    for (var i = 0; i < msg.length; i++) {\n      var w = msg[i];\n      if (endian === 'little') w = htonl(w);\n      res += zero8(w.toString(16));\n    }\n    return res;\n  }\n  utils.toHex32 = toHex32;\n\n  function zero2(word) {\n    if (word.length === 1) return '0' + word;else return word;\n  }\n  utils.zero2 = zero2;\n\n  function zero8(word) {\n    if (word.length === 7) return '0' + word;else if (word.length === 6) return '00' + word;else if (word.length === 5) return '000' + word;else if (word.length === 4) return '0000' + word;else if (word.length === 3) return '00000' + word;else if (word.length === 2) return '000000' + word;else if (word.length === 1) return '0000000' + word;else return word;\n  }\n  utils.zero8 = zero8;\n\n  function join32(msg, start, end, endian) {\n    var len = end - start;\n    assert(len % 4 === 0);\n    var res = new Array(len / 4);\n    for (var i = 0, k = start; i < res.length; i++, k += 4) {\n      var w;\n      if (endian === 'big') w = msg[k] << 24 | msg[k + 1] << 16 | msg[k + 2] << 8 | msg[k + 3];else w = msg[k + 3] << 24 | msg[k + 2] << 16 | msg[k + 1] << 8 | msg[k];\n      res[i] = w >>> 0;\n    }\n    return res;\n  }\n  utils.join32 = join32;\n\n  function split32(msg, endian) {\n    var res = new Array(msg.length * 4);\n    for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n      var m = msg[i];\n      if (endian === 'big') {\n        res[k] = m >>> 24;\n        res[k + 1] = m >>> 16 & 0xff;\n        res[k + 2] = m >>> 8 & 0xff;\n        res[k + 3] = m & 0xff;\n      } else {\n        res[k + 3] = m >>> 24;\n        res[k + 2] = m >>> 16 & 0xff;\n        res[k + 1] = m >>> 8 & 0xff;\n        res[k] = m & 0xff;\n      }\n    }\n    return res;\n  }\n  utils.split32 = split32;\n\n  function rotr32(w, b) {\n    return w >>> b | w << 32 - b;\n  }\n  utils.rotr32 = rotr32;\n\n  function rotl32(w, b) {\n    return w << b | w >>> 32 - b;\n  }\n  utils.rotl32 = rotl32;\n\n  function sum32(a, b) {\n    return a + b >>> 0;\n  }\n  utils.sum32 = sum32;\n\n  function sum32_3(a, b, c) {\n    return a + b + c >>> 0;\n  }\n  utils.sum32_3 = sum32_3;\n\n  function sum32_4(a, b, c, d) {\n    return a + b + c + d >>> 0;\n  }\n  utils.sum32_4 = sum32_4;\n\n  function sum32_5(a, b, c, d, e) {\n    return a + b + c + d + e >>> 0;\n  }\n  utils.sum32_5 = sum32_5;\n\n  function assert(cond, msg) {\n    if (!cond) throw new Error(msg || 'Assertion failed');\n  }\n  utils.assert = assert;\n\n  utils.inherits = inherits;\n\n  function sum64(buf, pos, ah, al) {\n    var bh = buf[pos];\n    var bl = buf[pos + 1];\n\n    var lo = al + bl >>> 0;\n    var hi = (lo < al ? 1 : 0) + ah + bh;\n    buf[pos] = hi >>> 0;\n    buf[pos + 1] = lo;\n  }\n  exports.sum64 = sum64;\n\n  function sum64_hi(ah, al, bh, bl) {\n    var lo = al + bl >>> 0;\n    var hi = (lo < al ? 1 : 0) + ah + bh;\n    return hi >>> 0;\n  };\n  exports.sum64_hi = sum64_hi;\n\n  function sum64_lo(ah, al, bh, bl) {\n    var lo = al + bl;\n    return lo >>> 0;\n  };\n  exports.sum64_lo = sum64_lo;\n\n  function sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n    var carry = 0;\n    var lo = al;\n    lo = lo + bl >>> 0;\n    carry += lo < al ? 1 : 0;\n    lo = lo + cl >>> 0;\n    carry += lo < cl ? 1 : 0;\n    lo = lo + dl >>> 0;\n    carry += lo < dl ? 1 : 0;\n\n    var hi = ah + bh + ch + dh + carry;\n    return hi >>> 0;\n  };\n  exports.sum64_4_hi = sum64_4_hi;\n\n  function sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n    var lo = al + bl + cl + dl;\n    return lo >>> 0;\n  };\n  exports.sum64_4_lo = sum64_4_lo;\n\n  function sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n    var carry = 0;\n    var lo = al;\n    lo = lo + bl >>> 0;\n    carry += lo < al ? 1 : 0;\n    lo = lo + cl >>> 0;\n    carry += lo < cl ? 1 : 0;\n    lo = lo + dl >>> 0;\n    carry += lo < dl ? 1 : 0;\n    lo = lo + el >>> 0;\n    carry += lo < el ? 1 : 0;\n\n    var hi = ah + bh + ch + dh + eh + carry;\n    return hi >>> 0;\n  };\n  exports.sum64_5_hi = sum64_5_hi;\n\n  function sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n    var lo = al + bl + cl + dl + el;\n\n    return lo >>> 0;\n  };\n  exports.sum64_5_lo = sum64_5_lo;\n\n  function rotr64_hi(ah, al, num) {\n    var r = al << 32 - num | ah >>> num;\n    return r >>> 0;\n  };\n  exports.rotr64_hi = rotr64_hi;\n\n  function rotr64_lo(ah, al, num) {\n    var r = ah << 32 - num | al >>> num;\n    return r >>> 0;\n  };\n  exports.rotr64_lo = rotr64_lo;\n\n  function shr64_hi(ah, al, num) {\n    return ah >>> num;\n  };\n  exports.shr64_hi = shr64_hi;\n\n  function shr64_lo(ah, al, num) {\n    var r = ah << 32 - num | al >>> num;\n    return r >>> 0;\n  };\n  exports.shr64_lo = shr64_lo;\n\n  /***/\n},\n/* 11 */\n/***/function (module, exports, __webpack_require__) {\n\n  \"use strict\";\n\n  exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n    var e, m;\n    var eLen = nBytes * 8 - mLen - 1;\n    var eMax = (1 << eLen) - 1;\n    var eBias = eMax >> 1;\n    var nBits = -7;\n    var i = isLE ? nBytes - 1 : 0;\n    var d = isLE ? -1 : 1;\n    var s = buffer[offset + i];\n\n    i += d;\n\n    e = s & (1 << -nBits) - 1;\n    s >>= -nBits;\n    nBits += eLen;\n    for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n    m = e & (1 << -nBits) - 1;\n    e >>= -nBits;\n    nBits += mLen;\n    for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n    if (e === 0) {\n      e = 1 - eBias;\n    } else if (e === eMax) {\n      return m ? NaN : (s ? -1 : 1) * Infinity;\n    } else {\n      m = m + Math.pow(2, mLen);\n      e = e - eBias;\n    }\n    return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n  };\n\n  exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n    var e, m, c;\n    var eLen = nBytes * 8 - mLen - 1;\n    var eMax = (1 << eLen) - 1;\n    var eBias = eMax >> 1;\n    var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n    var i = isLE ? 0 : nBytes - 1;\n    var d = isLE ? 1 : -1;\n    var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n\n    value = Math.abs(value);\n\n    if (isNaN(value) || value === Infinity) {\n      m = isNaN(value) ? 1 : 0;\n      e = eMax;\n    } else {\n      e = Math.floor(Math.log(value) / Math.LN2);\n      if (value * (c = Math.pow(2, -e)) < 1) {\n        e--;\n        c *= 2;\n      }\n      if (e + eBias >= 1) {\n        value += rt / c;\n      } else {\n        value += rt * Math.pow(2, 1 - eBias);\n      }\n      if (value * c >= 2) {\n        e++;\n        c /= 2;\n      }\n\n      if (e + eBias >= eMax) {\n        m = 0;\n        e = eMax;\n      } else if (e + eBias >= 1) {\n        m = (value * c - 1) * Math.pow(2, mLen);\n        e = e + eBias;\n      } else {\n        m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n        e = 0;\n      }\n    }\n\n    for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n    e = e << mLen | m;\n    eLen += mLen;\n    for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n    buffer[offset + i - d] |= s * 128;\n  };\n\n  /***/\n},\n/* 12 */\n/***/function (module, exports, __webpack_require__) {\n\n  \"use strict\";\n\n  if (typeof Object.create === 'function') {\n    // implementation from standard node.js 'util' module\n    module.exports = function inherits(ctor, superCtor) {\n      ctor.super_ = superCtor;\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n    };\n  } else {\n    // old school shim for old browsers\n    module.exports = function inherits(ctor, superCtor) {\n      ctor.super_ = superCtor;\n      var TempCtor = function TempCtor() {};\n      TempCtor.prototype = superCtor.prototype;\n      ctor.prototype = new TempCtor();\n      ctor.prototype.constructor = ctor;\n    };\n  }\n\n  /***/\n},\n/* 13 */\n/***/function (module, exports, __webpack_require__) {\n\n  \"use strict\";\n\n  var toString = {}.toString;\n\n  module.exports = Array.isArray || function (arr) {\n    return toString.call(arr) == '[object Array]';\n  };\n\n  /***/\n},\n/* 14 */\n/***/function (module, exports, __webpack_require__) {\n\n  \"use strict\";\n\n  // shim for using process in browser\n\n  var process = module.exports = {};\n\n  // cached from whatever global is present so that test runners that stub it\n  // don't break things.  But we need to wrap it in a try catch in case it is\n  // wrapped in strict mode code which doesn't define any globals.  It's inside a\n  // function because try/catches deoptimize in certain engines.\n\n  var cachedSetTimeout;\n  var cachedClearTimeout;\n\n  function defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n  }\n  function defaultClearTimeout() {\n    throw new Error('clearTimeout has not been defined');\n  }\n  (function () {\n    try {\n      if (typeof setTimeout === 'function') {\n        cachedSetTimeout = setTimeout;\n      } else {\n        cachedSetTimeout = defaultSetTimout;\n      }\n    } catch (e) {\n      cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n      if (typeof clearTimeout === 'function') {\n        cachedClearTimeout = clearTimeout;\n      } else {\n        cachedClearTimeout = defaultClearTimeout;\n      }\n    } catch (e) {\n      cachedClearTimeout = defaultClearTimeout;\n    }\n  })();\n  function runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n      //normal enviroments in sane situations\n      return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n      cachedSetTimeout = setTimeout;\n      return setTimeout(fun, 0);\n    }\n    try {\n      // when when somebody has screwed with setTimeout but no I.E. maddness\n      return cachedSetTimeout(fun, 0);\n    } catch (e) {\n      try {\n        // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n        return cachedSetTimeout.call(null, fun, 0);\n      } catch (e) {\n        // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n        return cachedSetTimeout.call(this, fun, 0);\n      }\n    }\n  }\n  function runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n      //normal enviroments in sane situations\n      return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n      cachedClearTimeout = clearTimeout;\n      return clearTimeout(marker);\n    }\n    try {\n      // when when somebody has screwed with setTimeout but no I.E. maddness\n      return cachedClearTimeout(marker);\n    } catch (e) {\n      try {\n        // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n        return cachedClearTimeout.call(null, marker);\n      } catch (e) {\n        // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n        // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n        return cachedClearTimeout.call(this, marker);\n      }\n    }\n  }\n  var queue = [];\n  var draining = false;\n  var currentQueue;\n  var queueIndex = -1;\n\n  function cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n      return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n      queue = currentQueue.concat(queue);\n    } else {\n      queueIndex = -1;\n    }\n    if (queue.length) {\n      drainQueue();\n    }\n  }\n\n  function drainQueue() {\n    if (draining) {\n      return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while (len) {\n      currentQueue = queue;\n      queue = [];\n      while (++queueIndex < len) {\n        if (currentQueue) {\n          currentQueue[queueIndex].run();\n        }\n      }\n      queueIndex = -1;\n      len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n  }\n\n  process.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n      for (var i = 1; i < arguments.length; i++) {\n        args[i - 1] = arguments[i];\n      }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n      runTimeout(drainQueue);\n    }\n  };\n\n  // v8 likes predictible objects\n  function Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n  }\n  Item.prototype.run = function () {\n    this.fun.apply(null, this.array);\n  };\n  process.title = 'browser';\n  process.browser = true;\n  process.env = {};\n  process.argv = [];\n  process.version = ''; // empty string to avoid regexp issues\n  process.versions = {};\n\n  function noop() {}\n\n  process.on = noop;\n  process.addListener = noop;\n  process.once = noop;\n  process.off = noop;\n  process.removeListener = noop;\n  process.removeAllListeners = noop;\n  process.emit = noop;\n  process.prependListener = noop;\n  process.prependOnceListener = noop;\n\n  process.listeners = function (name) {\n    return [];\n  };\n\n  process.binding = function (name) {\n    throw new Error('process.binding is not supported');\n  };\n\n  process.cwd = function () {\n    return '/';\n  };\n  process.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n  };\n  process.umask = function () {\n    return 0;\n  };\n\n  /***/\n},\n/* 15 */\n/***/function (module, exports, __webpack_require__) {\n\n  \"use strict\";\n\n  /*!\n   * bloom.js - bloom filter for bcoin\n   * Copyright (c) 2014-2015, Fedor Indutny (MIT License)\n   * Copyright (c) 2014-2016, Christopher Jeffrey (MIT License).\n   * https://github.com/indutny/bcoin\n   */\n\n  function Bloom(size, n, tweak) {\n    this.filter = new Uint32Array(Math.ceil(size / 32));\n    this.size = size;\n\n    this.n = n;\n    this.tweak = tweak;\n  }\n  module.exports = Bloom;\n\n  Bloom.prototype.hash = function hash(val, n) {\n    return murmur(val, sum32(mul32(n, 0xfba4c795), this.tweak)) % this.size;\n  };\n\n  Bloom.prototype.reset = function reset() {\n    this.filter.fill(0);\n  };\n\n  Bloom.prototype.add = function add(val) {\n    for (var i = 0; i < this.n; i++) {\n      var bit = this.hash(val, i);\n      var pos = 1 << (bit & 0x1f);\n      var shift = bit >> 5;\n\n      this.filter[shift] |= pos;\n    }\n  };\n\n  Bloom.prototype.test = function test(val) {\n    for (var i = 0; i < this.n; i++) {\n      var bit = this.hash(val, i);\n      var pos = 1 << (bit & 0x1f);\n      var shift = bit >> 5;\n\n      if ((this.filter[shift] & pos) === 0) return false;\n    }\n\n    return true;\n  };\n\n  /*\n   * Murmur\n   */\n\n  function mul32(a, b) {\n    var alo = a & 0xffff;\n    var blo = b & 0xffff;\n    var ahi = a >>> 16;\n    var bhi = b >>> 16;\n    var r, lo, hi;\n\n    lo = alo * blo;\n    hi = ahi * blo + bhi * alo & 0xffff;\n\n    hi += lo >>> 16;\n    lo &= 0xffff;\n    r = hi << 16 | lo;\n\n    if (r < 0) r += 0x100000000;\n\n    return r;\n  }\n\n  function sum32(a, b) {\n    var r = a + b & 0xffffffff;\n\n    if (r < 0) r += 0x100000000;\n\n    return r;\n  }\n\n  function rotl32(w, b) {\n    return w << b | w >>> 32 - b;\n  }\n\n  function murmur(data, seed) {\n    var c1 = 0xcc9e2d51;\n    var c2 = 0x1b873593;\n    var r1 = 15;\n    var r2 = 13;\n    var m = 5;\n    var n = 0xe6546b64;\n    var hash = seed;\n    var i, w, r, j;\n\n    for (i = 0; i + 4 <= data.length; i += 4) {\n      w = data[i] | data[i + 1] << 8 | data[i + 2] << 16 | data[i + 3] << 24;\n\n      w = mul32(w, c1);\n      w = rotl32(w, r1);\n      w = mul32(w, c2);\n\n      hash ^= w;\n      hash = rotl32(hash, r2);\n      hash = mul32(hash, m);\n      hash = sum32(hash, n);\n    }\n\n    if (i !== data.length) {\n      r = 0;\n      for (j = data.length - 1; j >= i; j--) {\n        r = r << 8 | data[j];\n      }r = mul32(r, c1);\n      r = rotl32(r, r1);\n      if (r < 0) r += 0x100000000;\n      r = mul32(r, c2);\n\n      hash ^= r;\n    }\n\n    hash ^= data.length;\n    hash ^= hash >>> 16;\n    hash = mul32(hash, 0x85ebca6b);\n    hash ^= hash >>> 13;\n    hash = mul32(hash, 0xc2b2ae35);\n    hash ^= hash >>> 16;\n\n    if (hash < 0) hash += 0x100000000;\n\n    return hash;\n  }\n\n  /***/\n},\n/* 16 */\n/***/function (module, exports, __webpack_require__) {\n\n  \"use strict\";\n  /* WEBPACK VAR INJECTION */\n  (function (Buffer) {\n\n    var assert = __webpack_require__(4);\n\n    var pow = __webpack_require__(2);\n    var utils = pow.utils;\n\n    var MIN_NONCE_SIZE = 8;\n\n    function Solver() {}\n    module.exports = Solver;\n\n    Solver.prototype._genNonce = function _genNonce(buf) {\n      var now = Date.now();\n\n      buf.writeUInt32BE(now / 0x100000000 >>> 0, 0);\n      buf.writeUInt32BE(now >>> 0, 4);\n\n      var off = 8;\n      var words = off + ((buf.length - off) / 4 | 0) * 4;\n\n      for (; off < words; off += 4) {\n        buf.writeUInt32LE(Math.random() * 0x100000000 >>> 0, off, true);\n      }for (; off < buf.length; off++) {\n        buf[off] = Math.random() * 0x100 >>> 0;\n      }\n    };\n\n    Solver.prototype.solve = function solve(complexity, prefix) {\n      // 64 bits of entropy should be enough for each millisecond to avoid\n      // collisions\n      var nonce = Buffer.alloc(MIN_NONCE_SIZE + 8);\n\n      for (;;) {\n        this._genNonce(nonce);\n\n        var hash = utils.hash(nonce, prefix);\n\n        if (utils.checkComplexity(hash, complexity)) return nonce;\n      }\n    };\n    /* WEBPACK VAR INJECTION */\n  }).call(exports, __webpack_require__(1).Buffer);\n\n  /***/\n},\n/* 17 */\n/***/function (module, exports, __webpack_require__) {\n\n  \"use strict\";\n\n  var assert = __webpack_require__(4);\n  var Buffer = __webpack_require__(1).Buffer;\n\n  var crypto = void 0;\n  var hash = void 0;\n  try {\n    crypto = __webpack_require__(23);\n  } catch (e) {}\n\n  var HAS_CRYPTO = !!(crypto && crypto.createHash);\n  if (!HAS_CRYPTO) hash = __webpack_require__(0);\n\n  exports.checkComplexity = function checkComplexity(hash, complexity) {\n    assert(complexity < hash.length * 8, 'Complexity is too high');\n\n    var off = 0;\n    var i = void 0;\n    for (i = 0; i <= complexity - 8; i += 8, off++) {\n      if (hash[off] !== 0) return false;\n    }\n\n    var mask = 0xff << 8 + i - complexity;\n    return (hash[off] & mask) === 0;\n  };\n\n  exports.hash = HAS_CRYPTO ? function (nonce, prefix) {\n    var h = crypto.createHash('sha256');\n    if (prefix) h.update(prefix);\n    h.update(nonce);\n    return h.digest();\n  } : function (nonce, prefix) {\n    var h = hash.sha256();\n    if (prefix) h.update(prefix);\n    h.update(nonce);\n    return Buffer.from(h.digest());\n  };\n\n  /***/\n},\n/* 18 */\n/***/function (module, exports, __webpack_require__) {\n\n  \"use strict\";\n\n  var Buffer = __webpack_require__(1).Buffer;\n\n  var pow = __webpack_require__(2);\n  var utils = pow.utils;\n  var Bloom = pow.Bloom;\n\n  var MIN_NONCE_LEN = 8;\n  var MAX_NONCE_LEN = 32;\n  var DEFAULT_VALIDITY = 60000;\n\n  function Verifier(options) {\n    var bloom = function bloom() {\n      return new Bloom(options.size, options.n, Math.random() * 0x100000000 >>> 0);\n    };\n\n    this.blooms = [bloom(), bloom()];\n    this.complexity = options.complexity;\n    this.validity = options.validity || DEFAULT_VALIDITY;\n    this.prefix = options.prefix || Buffer.alloc(0);\n  }\n  module.exports = Verifier;\n\n  Verifier.prototype._readTimestamp = function _readTimestamp(nonce, off) {\n    return nonce.readUInt32BE(off) * 0x100000000 + nonce.readUInt32BE(off + 4);\n  };\n\n  Verifier.prototype.check = function check(nonce) {\n    var prefix = this.prefix;\n\n    if (nonce.length < prefix.length + MIN_NONCE_LEN) return false;\n    if (nonce.length > prefix.length + MAX_NONCE_LEN) return false;\n\n    var ts = this._readTimestamp(nonce, 0);\n    var now = Date.now();\n\n    if (Math.abs(ts - now) > this.validity) return false;\n\n    for (var i = 0; i < this.blooms.length; i++) {\n      if (this.blooms[i].test(nonce)) return false;\n    }var hash = utils.hash(nonce, prefix);\n\n    if (!utils.checkComplexity(hash, this.complexity)) return false;\n\n    this.blooms[0].add(nonce);\n    return true;\n  };\n\n  Verifier.prototype.reset = function reset() {\n    this.blooms[1].reset();\n\n    // Swap filters\n    var tmp = this.blooms[0];\n    this.blooms[0] = this.blooms[1];\n    this.blooms[1] = tmp;\n  };\n\n  /***/\n},\n/* 19 */\n/***/function (module, exports, __webpack_require__) {\n\n  \"use strict\";\n\n  if (typeof Object.create === 'function') {\n    // implementation from standard node.js 'util' module\n    module.exports = function inherits(ctor, superCtor) {\n      ctor.super_ = superCtor;\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n    };\n  } else {\n    // old school shim for old browsers\n    module.exports = function inherits(ctor, superCtor) {\n      ctor.super_ = superCtor;\n      var TempCtor = function TempCtor() {};\n      TempCtor.prototype = superCtor.prototype;\n      ctor.prototype = new TempCtor();\n      ctor.prototype.constructor = ctor;\n    };\n  }\n\n  /***/\n},\n/* 20 */\n/***/function (module, exports, __webpack_require__) {\n\n  \"use strict\";\n\n  var _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\n    return typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);\n  };\n\n  module.exports = function isBuffer(arg) {\n    return arg && (typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) === 'object' && typeof arg.copy === 'function' && typeof arg.fill === 'function' && typeof arg.readUInt8 === 'function';\n  };\n\n  /***/\n},\n/* 21 */\n/***/function (module, exports, __webpack_require__) {\n\n  \"use strict\";\n  /* WEBPACK VAR INJECTION */\n  (function (global, process) {\n\n    var _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\n      return typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);\n    } : function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);\n    };\n\n    // Copyright Joyent, Inc. and other Node contributors.\n    //\n    // Permission is hereby granted, free of charge, to any person obtaining a\n    // copy of this software and associated documentation files (the\n    // \"Software\"), to deal in the Software without restriction, including\n    // without limitation the rights to use, copy, modify, merge, publish,\n    // distribute, sublicense, and/or sell copies of the Software, and to permit\n    // persons to whom the Software is furnished to do so, subject to the\n    // following conditions:\n    //\n    // The above copyright notice and this permission notice shall be included\n    // in all copies or substantial portions of the Software.\n    //\n    // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n    // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n    // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n    // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n    // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n    // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n    // USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n    var formatRegExp = /%[sdj%]/g;\n    exports.format = function (f) {\n      if (!isString(f)) {\n        var objects = [];\n        for (var i = 0; i < arguments.length; i++) {\n          objects.push(inspect(arguments[i]));\n        }\n        return objects.join(' ');\n      }\n\n      var i = 1;\n      var args = arguments;\n      var len = args.length;\n      var str = String(f).replace(formatRegExp, function (x) {\n        if (x === '%%') return '%';\n        if (i >= len) return x;\n        switch (x) {\n          case '%s':\n            return String(args[i++]);\n          case '%d':\n            return Number(args[i++]);\n          case '%j':\n            try {\n              return JSON.stringify(args[i++]);\n            } catch (_) {\n              return '[Circular]';\n            }\n          default:\n            return x;\n        }\n      });\n      for (var x = args[i]; i < len; x = args[++i]) {\n        if (isNull(x) || !isObject(x)) {\n          str += ' ' + x;\n        } else {\n          str += ' ' + inspect(x);\n        }\n      }\n      return str;\n    };\n\n    // Mark that a method should not be used.\n    // Returns a modified function which warns once by default.\n    // If --no-deprecation is set, then it is a no-op.\n    exports.deprecate = function (fn, msg) {\n      // Allow for deprecating things in the process of starting up.\n      if (isUndefined(global.process)) {\n        return function () {\n          return exports.deprecate(fn, msg).apply(this, arguments);\n        };\n      }\n\n      if (process.noDeprecation === true) {\n        return fn;\n      }\n\n      var warned = false;\n      function deprecated() {\n        if (!warned) {\n          if (process.throwDeprecation) {\n            throw new Error(msg);\n          } else if (process.traceDeprecation) {\n            console.trace(msg);\n          } else {\n            console.error(msg);\n          }\n          warned = true;\n        }\n        return fn.apply(this, arguments);\n      }\n\n      return deprecated;\n    };\n\n    var debugs = {};\n    var debugEnviron;\n    exports.debuglog = function (set) {\n      if (isUndefined(debugEnviron)) debugEnviron = process.env.NODE_DEBUG || '';\n      set = set.toUpperCase();\n      if (!debugs[set]) {\n        if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n          var pid = process.pid;\n          debugs[set] = function () {\n            var msg = exports.format.apply(exports, arguments);\n            console.error('%s %d: %s', set, pid, msg);\n          };\n        } else {\n          debugs[set] = function () {};\n        }\n      }\n      return debugs[set];\n    };\n\n    /**\n     * Echos the value of a value. Trys to print the value out\n     * in the best way possible given the different types.\n     *\n     * @param {Object} obj The object to print out.\n     * @param {Object} opts Optional options object that alters the output.\n     */\n    /* legacy: obj, showHidden, depth, colors*/\n    function inspect(obj, opts) {\n      // default options\n      var ctx = {\n        seen: [],\n        stylize: stylizeNoColor\n      };\n      // legacy...\n      if (arguments.length >= 3) ctx.depth = arguments[2];\n      if (arguments.length >= 4) ctx.colors = arguments[3];\n      if (isBoolean(opts)) {\n        // legacy...\n        ctx.showHidden = opts;\n      } else if (opts) {\n        // got an \"options\" object\n        exports._extend(ctx, opts);\n      }\n      // set default options\n      if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n      if (isUndefined(ctx.depth)) ctx.depth = 2;\n      if (isUndefined(ctx.colors)) ctx.colors = false;\n      if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n      if (ctx.colors) ctx.stylize = stylizeWithColor;\n      return formatValue(ctx, obj, ctx.depth);\n    }\n    exports.inspect = inspect;\n\n    // http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\n    inspect.colors = {\n      'bold': [1, 22],\n      'italic': [3, 23],\n      'underline': [4, 24],\n      'inverse': [7, 27],\n      'white': [37, 39],\n      'grey': [90, 39],\n      'black': [30, 39],\n      'blue': [34, 39],\n      'cyan': [36, 39],\n      'green': [32, 39],\n      'magenta': [35, 39],\n      'red': [31, 39],\n      'yellow': [33, 39]\n    };\n\n    // Don't use 'blue' not visible on cmd.exe\n    inspect.styles = {\n      'special': 'cyan',\n      'number': 'yellow',\n      'boolean': 'yellow',\n      'undefined': 'grey',\n      'null': 'bold',\n      'string': 'green',\n      'date': 'magenta',\n      // \"name\": intentionally not styling\n      'regexp': 'red'\n    };\n\n    function stylizeWithColor(str, styleType) {\n      var style = inspect.styles[styleType];\n\n      if (style) {\n        return '\\x1B[' + inspect.colors[style][0] + 'm' + str + '\\x1B[' + inspect.colors[style][1] + 'm';\n      } else {\n        return str;\n      }\n    }\n\n    function stylizeNoColor(str, styleType) {\n      return str;\n    }\n\n    function arrayToHash(array) {\n      var hash = {};\n\n      array.forEach(function (val, idx) {\n        hash[val] = true;\n      });\n\n      return hash;\n    }\n\n    function formatValue(ctx, value, recurseTimes) {\n      // Provide a hook for user-specified inspect functions.\n      // Check that value is an object with an inspect function on it\n      if (ctx.customInspect && value && isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n        var ret = value.inspect(recurseTimes, ctx);\n        if (!isString(ret)) {\n          ret = formatValue(ctx, ret, recurseTimes);\n        }\n        return ret;\n      }\n\n      // Primitive types cannot have properties\n      var primitive = formatPrimitive(ctx, value);\n      if (primitive) {\n        return primitive;\n      }\n\n      // Look up the keys of the object.\n      var keys = Object.keys(value);\n      var visibleKeys = arrayToHash(keys);\n\n      if (ctx.showHidden) {\n        keys = Object.getOwnPropertyNames(value);\n      }\n\n      // IE doesn't make error fields non-enumerable\n      // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n      if (isError(value) && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n        return formatError(value);\n      }\n\n      // Some type of object without properties can be shortcutted.\n      if (keys.length === 0) {\n        if (isFunction(value)) {\n          var name = value.name ? ': ' + value.name : '';\n          return ctx.stylize('[Function' + name + ']', 'special');\n        }\n        if (isRegExp(value)) {\n          return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n        }\n        if (isDate(value)) {\n          return ctx.stylize(Date.prototype.toString.call(value), 'date');\n        }\n        if (isError(value)) {\n          return formatError(value);\n        }\n      }\n\n      var base = '',\n          array = false,\n          braces = ['{', '}'];\n\n      // Make Array say that they are Array\n      if (isArray(value)) {\n        array = true;\n        braces = ['[', ']'];\n      }\n\n      // Make functions say that they are functions\n      if (isFunction(value)) {\n        var n = value.name ? ': ' + value.name : '';\n        base = ' [Function' + n + ']';\n      }\n\n      // Make RegExps say that they are RegExps\n      if (isRegExp(value)) {\n        base = ' ' + RegExp.prototype.toString.call(value);\n      }\n\n      // Make dates with properties first say the date\n      if (isDate(value)) {\n        base = ' ' + Date.prototype.toUTCString.call(value);\n      }\n\n      // Make error with message first say the error\n      if (isError(value)) {\n        base = ' ' + formatError(value);\n      }\n\n      if (keys.length === 0 && (!array || value.length == 0)) {\n        return braces[0] + base + braces[1];\n      }\n\n      if (recurseTimes < 0) {\n        if (isRegExp(value)) {\n          return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n        } else {\n          return ctx.stylize('[Object]', 'special');\n        }\n      }\n\n      ctx.seen.push(value);\n\n      var output;\n      if (array) {\n        output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n      } else {\n        output = keys.map(function (key) {\n          return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n        });\n      }\n\n      ctx.seen.pop();\n\n      return reduceToSingleString(output, base, braces);\n    }\n\n    function formatPrimitive(ctx, value) {\n      if (isUndefined(value)) return ctx.stylize('undefined', 'undefined');\n      if (isString(value)) {\n        var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '').replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"') + '\\'';\n        return ctx.stylize(simple, 'string');\n      }\n      if (isNumber(value)) return ctx.stylize('' + value, 'number');\n      if (isBoolean(value)) return ctx.stylize('' + value, 'boolean');\n      // For some reason typeof null is \"object\", so special case here.\n      if (isNull(value)) return ctx.stylize('null', 'null');\n    }\n\n    function formatError(value) {\n      return '[' + Error.prototype.toString.call(value) + ']';\n    }\n\n    function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n      var output = [];\n      for (var i = 0, l = value.length; i < l; ++i) {\n        if (hasOwnProperty(value, String(i))) {\n          output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), true));\n        } else {\n          output.push('');\n        }\n      }\n      keys.forEach(function (key) {\n        if (!key.match(/^\\d+$/)) {\n          output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key, true));\n        }\n      });\n      return output;\n    }\n\n    function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n      var name, str, desc;\n      desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n      if (desc.get) {\n        if (desc.set) {\n          str = ctx.stylize('[Getter/Setter]', 'special');\n        } else {\n          str = ctx.stylize('[Getter]', 'special');\n        }\n      } else {\n        if (desc.set) {\n          str = ctx.stylize('[Setter]', 'special');\n        }\n      }\n      if (!hasOwnProperty(visibleKeys, key)) {\n        name = '[' + key + ']';\n      }\n      if (!str) {\n        if (ctx.seen.indexOf(desc.value) < 0) {\n          if (isNull(recurseTimes)) {\n            str = formatValue(ctx, desc.value, null);\n          } else {\n            str = formatValue(ctx, desc.value, recurseTimes - 1);\n          }\n          if (str.indexOf('\\n') > -1) {\n            if (array) {\n              str = str.split('\\n').map(function (line) {\n                return '  ' + line;\n              }).join('\\n').substr(2);\n            } else {\n              str = '\\n' + str.split('\\n').map(function (line) {\n                return '   ' + line;\n              }).join('\\n');\n            }\n          }\n        } else {\n          str = ctx.stylize('[Circular]', 'special');\n        }\n      }\n      if (isUndefined(name)) {\n        if (array && key.match(/^\\d+$/)) {\n          return str;\n        }\n        name = JSON.stringify('' + key);\n        if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n          name = name.substr(1, name.length - 2);\n          name = ctx.stylize(name, 'name');\n        } else {\n          name = name.replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"').replace(/(^\"|\"$)/g, \"'\");\n          name = ctx.stylize(name, 'string');\n        }\n      }\n\n      return name + ': ' + str;\n    }\n\n    function reduceToSingleString(output, base, braces) {\n      var numLinesEst = 0;\n      var length = output.reduce(function (prev, cur) {\n        numLinesEst++;\n        if (cur.indexOf('\\n') >= 0) numLinesEst++;\n        return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n      }, 0);\n\n      if (length > 60) {\n        return braces[0] + (base === '' ? '' : base + '\\n ') + ' ' + output.join(',\\n  ') + ' ' + braces[1];\n      }\n\n      return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n    }\n\n    // NOTE: These type checking functions intentionally don't use `instanceof`\n    // because it is fragile and can be easily faked with `Object.create()`.\n    function isArray(ar) {\n      return Array.isArray(ar);\n    }\n    exports.isArray = isArray;\n\n    function isBoolean(arg) {\n      return typeof arg === 'boolean';\n    }\n    exports.isBoolean = isBoolean;\n\n    function isNull(arg) {\n      return arg === null;\n    }\n    exports.isNull = isNull;\n\n    function isNullOrUndefined(arg) {\n      return arg == null;\n    }\n    exports.isNullOrUndefined = isNullOrUndefined;\n\n    function isNumber(arg) {\n      return typeof arg === 'number';\n    }\n    exports.isNumber = isNumber;\n\n    function isString(arg) {\n      return typeof arg === 'string';\n    }\n    exports.isString = isString;\n\n    function isSymbol(arg) {\n      return (typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) === 'symbol';\n    }\n    exports.isSymbol = isSymbol;\n\n    function isUndefined(arg) {\n      return arg === void 0;\n    }\n    exports.isUndefined = isUndefined;\n\n    function isRegExp(re) {\n      return isObject(re) && objectToString(re) === '[object RegExp]';\n    }\n    exports.isRegExp = isRegExp;\n\n    function isObject(arg) {\n      return (typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) === 'object' && arg !== null;\n    }\n    exports.isObject = isObject;\n\n    function isDate(d) {\n      return isObject(d) && objectToString(d) === '[object Date]';\n    }\n    exports.isDate = isDate;\n\n    function isError(e) {\n      return isObject(e) && (objectToString(e) === '[object Error]' || e instanceof Error);\n    }\n    exports.isError = isError;\n\n    function isFunction(arg) {\n      return typeof arg === 'function';\n    }\n    exports.isFunction = isFunction;\n\n    function isPrimitive(arg) {\n      return arg === null || typeof arg === 'boolean' || typeof arg === 'number' || typeof arg === 'string' || (typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) === 'symbol' || // ES6 symbol\n      typeof arg === 'undefined';\n    }\n    exports.isPrimitive = isPrimitive;\n\n    exports.isBuffer = __webpack_require__(20);\n\n    function objectToString(o) {\n      return Object.prototype.toString.call(o);\n    }\n\n    function pad(n) {\n      return n < 10 ? '0' + n.toString(10) : n.toString(10);\n    }\n\n    var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\n    // 26 Feb 16:19:34\n    function timestamp() {\n      var d = new Date();\n      var time = [pad(d.getHours()), pad(d.getMinutes()), pad(d.getSeconds())].join(':');\n      return [d.getDate(), months[d.getMonth()], time].join(' ');\n    }\n\n    // log is just a thin wrapper to console.log that prepends a timestamp\n    exports.log = function () {\n      console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n    };\n\n    /**\n     * Inherit the prototype methods from one constructor into another.\n     *\n     * The Function.prototype.inherits from lang.js rewritten as a standalone\n     * function (not on Function.prototype). NOTE: If this file is to be loaded\n     * during bootstrapping this function needs to be rewritten using some native\n     * functions as prototype setup using normal JavaScript does not work as\n     * expected during bootstrapping (see mirror.js in r114903).\n     *\n     * @param {function} ctor Constructor function which needs to inherit the\n     *     prototype.\n     * @param {function} superCtor Constructor function to inherit prototype from.\n     */\n    exports.inherits = __webpack_require__(19);\n\n    exports._extend = function (origin, add) {\n      // Don't do anything if add isn't an object\n      if (!add || !isObject(add)) return origin;\n\n      var keys = Object.keys(add);\n      var i = keys.length;\n      while (i--) {\n        origin[keys[i]] = add[keys[i]];\n      }\n      return origin;\n    };\n\n    function hasOwnProperty(obj, prop) {\n      return Object.prototype.hasOwnProperty.call(obj, prop);\n    }\n    /* WEBPACK VAR INJECTION */\n  }).call(exports, __webpack_require__(3), __webpack_require__(14));\n\n  /***/\n},\n/* 22 */\n/***/function (module, exports, __webpack_require__) {\n\n  \"use strict\";\n\n  var Buffer = __webpack_require__(1).Buffer;\n  var pow = __webpack_require__(2);\n\n  var solver = new pow.Solver();\n\n  onmessage = function onmessage(e) {\n    var msg = e.data;\n\n    var nonce = solver.solve(msg.complexity, Buffer.from(msg.prefix, 'hex'));\n    postMessage(nonce.toString('hex'));\n  };\n\n  /***/\n},\n/* 23 */\n/***/function (module, exports) {\n\n  /* (ignored) */\n\n  /***/}]);"},function(n,e,t){t(1),n.exports=t(2)}]);